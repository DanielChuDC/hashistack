{
    "version": 3,
    "terraform_version": "0.7.4",
    "serial": 19,
    "lineage": "8477e184-84cd-4ba0-a26d-e71da534201a",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1"
            ],
            "outputs": {
                "info": {
                    "sensitive": false,
                    "type": "string",
                    "value": "\nUtility server:\n  c1m-utility-us-central1-b-n1-standard-1-1: 10.140.0.3/104.197.189.43 - ssh ubuntu@104.197.189.43\n\n  Graphite: http://104.197.189.43\n\nConsul servers:\n    c1m-consul-server-us-central1-b-n1-standard-2-1: 10.140.0.8/104.154.253.186 - ssh ubuntu@104.154.253.186\n    c1m-consul-server-us-central1-b-n1-standard-2-2: 10.140.0.7/104.154.110.85 - ssh ubuntu@104.154.110.85\n    c1m-consul-server-us-central1-b-n1-standard-2-3: 10.140.0.2/104.198.206.114 - ssh ubuntu@104.198.206.114\n\nNomad servers:\n    c1m-nomad-server-us-central1-b-n1-standard-2-1: 10.140.0.6/146.148.50.233 - ssh ubuntu@146.148.50.233\n    c1m-nomad-server-us-central1-b-n1-standard-2-2: 10.140.0.5/146.148.88.66 - ssh ubuntu@146.148.88.66\n    c1m-nomad-server-us-central1-b-n1-standard-2-3: 10.140.0.4/104.155.149.17 - ssh ubuntu@104.155.149.17\n\nconsul dns:\n    utility.service.consul\n    redis.service.consul\n    statsite.service.consul\n    graphite.service.consul\n\n    consul-server.service.consul\n        us-central1.consul-server.service.consul\n        us-central1-b.consul-server.service.consul\n        n1-standard-2.consul-server.service.consul\n\n    nomad-server.service.consul\n        us-central1.nomad-server.service.consul\n        us-central1-b.nomad-server.service.consul\n        n1-standard-2.nomad-server.service.consul\n\n    nomad-client.service.consul\n        us-central1.nomad-client.service.consul\n        us-central1-b.nomad-client.service.consul\n        n1-standard-2.nomad-client.service.consul\n        NODE_CLASS.nomad-client.service.consul\n"
                },
                "network": {
                    "sensitive": false,
                    "type": "string",
                    "value": "c1m"
                },
                "region": {
                    "sensitive": false,
                    "type": "string",
                    "value": "us-central1"
                },
                "vpc_cidr": {
                    "sensitive": false,
                    "type": "string",
                    "value": "10.140.0.0/16"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute"
            ],
            "outputs": {
                "consul_server_machine_types": {
                    "sensitive": false,
                    "type": "string",
                    "value": "n1-standard-2,n1-standard-2,n1-standard-2"
                },
                "consul_server_names": {
                    "sensitive": false,
                    "type": "string",
                    "value": "c1m-consul-server-us-central1-b-n1-standard-2-1,c1m-consul-server-us-central1-b-n1-standard-2-2,c1m-consul-server-us-central1-b-n1-standard-2-3"
                },
                "consul_server_private_ips": {
                    "sensitive": false,
                    "type": "string",
                    "value": "10.140.0.4,10.140.0.8,10.140.0.5"
                },
                "consul_server_public_ips": {
                    "sensitive": false,
                    "type": "string",
                    "value": "104.197.189.43,104.154.253.186,104.154.110.85"
                },
                "nomad_server_machine_types": {
                    "sensitive": false,
                    "type": "string",
                    "value": "n1-standard-2,n1-standard-2,n1-standard-2"
                },
                "nomad_server_names": {
                    "sensitive": false,
                    "type": "string",
                    "value": "c1m-nomad-server-us-central1-b-n1-standard-2-1,c1m-nomad-server-us-central1-b-n1-standard-2-2,c1m-nomad-server-us-central1-b-n1-standard-2-3"
                },
                "nomad_server_private_ips": {
                    "sensitive": false,
                    "type": "string",
                    "value": "10.140.0.6,10.140.0.7,10.140.0.2"
                },
                "nomad_server_public_ips": {
                    "sensitive": false,
                    "type": "string",
                    "value": "146.148.50.233,104.154.120.103,104.198.206.114"
                },
                "utility_machine_type": {
                    "sensitive": false,
                    "type": "string",
                    "value": "n1-standard-1"
                },
                "utility_name": {
                    "sensitive": false,
                    "type": "string",
                    "value": "c1m-utility-us-central1-b-n1-standard-1-1"
                },
                "utility_private_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "10.140.0.3"
                },
                "utility_public_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "146.148.88.66"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "network"
            ],
            "outputs": {
                "name": {
                    "sensitive": false,
                    "type": "string",
                    "value": "c1m"
                },
                "vpc_cidr": {
                    "sensitive": false,
                    "type": "string",
                    "value": "10.140.0.0/16"
                }
            },
            "resources": {
                "google_compute_firewall.allow-internal": {
                    "type": "google_compute_firewall",
                    "depends_on": [
                        "google_compute_network.network"
                    ],
                    "primary": {
                        "id": "c1m-allow-internal",
                        "attributes": {
                            "allow.#": "3",
                            "allow.1367131964.ports.#": "0",
                            "allow.1367131964.protocol": "icmp",
                            "allow.2250996047.ports.#": "1",
                            "allow.2250996047.ports.0": "0-65535",
                            "allow.2250996047.protocol": "tcp",
                            "allow.884285603.ports.#": "1",
                            "allow.884285603.ports.0": "0-65535",
                            "allow.884285603.protocol": "udp",
                            "description": "",
                            "id": "c1m-allow-internal",
                            "name": "c1m-allow-internal",
                            "network": "c1m",
                            "project": "nomadspark-143720",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/nomadspark-143720/global/firewalls/c1m-allow-internal",
                            "source_ranges.#": "1",
                            "source_ranges.1269658630": "10.140.0.0/16",
                            "source_tags.#": "0",
                            "target_tags.#": "0"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "google_compute_firewall.allow-ssh": {
                    "type": "google_compute_firewall",
                    "depends_on": [
                        "google_compute_network.network"
                    ],
                    "primary": {
                        "id": "c1m-allow-ssh",
                        "attributes": {
                            "allow.#": "1",
                            "allow.803338340.ports.#": "1",
                            "allow.803338340.ports.0": "22",
                            "allow.803338340.protocol": "tcp",
                            "description": "",
                            "id": "c1m-allow-ssh",
                            "name": "c1m-allow-ssh",
                            "network": "c1m",
                            "project": "nomadspark-143720",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/nomadspark-143720/global/firewalls/c1m-allow-ssh",
                            "source_ranges.#": "1",
                            "source_ranges.1080289494": "0.0.0.0/0",
                            "source_tags.#": "0",
                            "target_tags.#": "0"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "google_compute_network.network": {
                    "type": "google_compute_network",
                    "depends_on": [],
                    "primary": {
                        "id": "c1m",
                        "attributes": {
                            "gateway_ipv4": "10.140.0.1",
                            "id": "c1m",
                            "ipv4_range": "10.140.0.0/16",
                            "name": "c1m",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/nomadspark-143720/global/networks/c1m"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "consul_servers"
            ],
            "outputs": {
                "machine_types": {
                    "sensitive": false,
                    "type": "string",
                    "value": "n1-standard-2,n1-standard-2,n1-standard-2"
                },
                "names": {
                    "sensitive": false,
                    "type": "string",
                    "value": "c1m-consul-server-us-central1-b-n1-standard-2-1,c1m-consul-server-us-central1-b-n1-standard-2-2,c1m-consul-server-us-central1-b-n1-standard-2-3"
                },
                "private_ips": {
                    "sensitive": false,
                    "type": "string",
                    "value": "10.140.0.4,10.140.0.2,10.140.0.3"
                },
                "public_ips": {
                    "sensitive": false,
                    "type": "string",
                    "value": "23.236.62.107,104.154.253.186,146.148.69.116"
                }
            },
            "resources": {
                "google_compute_instance.consul_server.0": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "template_file.consul_server"
                    ],
                    "primary": {
                        "id": "c1m-consul-server-us-central1-b-n1-standard-2-1",
                        "attributes": {
                            "can_ip_forward": "false",
                            "disk.#": "1",
                            "disk.0.auto_delete": "true",
                            "disk.0.device_name": "",
                            "disk.0.disk": "",
                            "disk.0.image": "packer-c1m-consul-server-1474268577",
                            "disk.0.scratch": "false",
                            "disk.0.size": "10",
                            "disk.0.type": "pd-ssd",
                            "id": "c1m-consul-server-us-central1-b-n1-standard-2-1",
                            "machine_type": "n1-standard-2",
                            "metadata.%": "1",
                            "metadata.sshKeys": "ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDL3JLxeUjavieArnERAx2zW5eKMNaudGJi3JNRJHEOogXOMFIPMnNvikTESdQ/OOSpz2E2uh58wENt5tKmsUAqsCVl2cJyOVPaSmoCopVLAWtiR/iiO10tp2mLtYfyykQpWkVo8WMP+29EPuyjuKvj7nSm6PCifDKsx+pTCvxjG/ZtNW+Ru7wA7HleTmE+AAlRUV3KtndzA/2yT9mrWV/WTwya5Z0kswO/kLH5tuDcKwyf907y/HMc7V6PZfpKA4004OdBYAkP0nYoYNPQ+cDD9LQ+d5+/UFgzqGbox6VAdx8nD2ns83HM7JuTyg/rmD4sr6Nj2h/SXFRVUiWD2UEZ Mike@MIHBE-M-RCNE\n",
                            "metadata_fingerprint": "z7WbpFIDRxg=",
                            "metadata_startup_script": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT consul_server.sh: $1\"\n  echo \"$DT consul_server.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nlogger \"Setting private key\"\necho \"-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAy9yS8XlI2r4ngK5xEQMds1uXijDWrnRiYtyTUSRxDqIFzjBS\nDzJzb4pExEnUPzjkqc9hNroefMBDbebSprFAKrAlZdnCcjlT2kpqAqKVSwFrYkf4\nojtdLadpi7WH8spEKVpFaPFjD/tvRD7so7ir4+50pujwonwyrMfqUwr8Yxv2bTVv\nkbu8AOx5Xk5hPgAJUVFdyrZ3cwP9sk/Zq1lf1k8MmuWdJLMDv5Cx+bbg3CsMn/dO\n8vxzHO1ej2X6SgONNODnQWAJD9J2KGDT0PnAw/S0Pnefv1BYM6hm6MelQHcfJw9p\n7PNxzOybk8oP65g+LK+jY9of0lxUVVIlg9lBGQIDAQABAoIBAQDJWSVFHM5pRjDL\n9v8zl0lJcehdk9kl20ula0iRdxW3Jy3mtXEHE4RSIVXELUtV2kJ2uZ3BqNgdzOOM\nc9OQ0jaXMvzs+MQFfzujuaW0zpH30AIYww7+ZPWl9tjXJUeN9FqYIVG20dtO2L7P\nv/qHxgj4CffrNt0dDuAaKSX2OT6IPzu4eFS2fZdZtJBDiGrG7ionFiZHHVbeSI5g\nTnhTsRJqz/+B8rrDQkrqn4FCwWvBT6FNQg5+bBvd6J3FukYBFrHUP1frb8Qz11oA\nkmiKKRkCBkwtH6Ni6Veo2/lJcsAfgel6uiOPVWtj2o2vt/E7VYq/l63Kl2taZMkO\ny0qE1gqVAoGBAPs7x9JGgeY3xmSssoxoFNlzDk20tlVzZoHlS6qQMsnhqKfwrPKy\nbq657cNyLRxmrsjVBf0VaBteXSQWaUacvE3HX8pTKUP5xSYM/j0wkXUC/M9hneE0\nuLIXIbMGHW54gQNSaT5TvtOVDALVe5S2BzuB0xlp5C8tVX98JiuD60UXAoGBAM+6\ntlRVaKF158FAeYNXrUmoTq1Vb3wI0RC+rSIO227wxsRmD5AqbtTRlGjd7WoR0K9M\n9M8c7GwcwKl4jEWGruI0sdtr7WAVC5XRNlwXUH6N/OFhc/AaRtzf9SLdFZWt2sau\nl5VUB5J+pb6uoW/DNLux/5wl+XnYuKby5rxqq+lPAoGBANxwd8RpWVFHXyy223OX\nX7Ps4IAOMG6J80fGib3/CJFbD0FMTHQnXDazrYvwguSItJRDVh3ayp45DkC76WOr\n4w3cApDkpzCd1/6rJ+lI1Fh3ZpwQaxdPyz94THloxCpKUek4RmAJ20aLYR6bcvPp\nRC9SmoeSAkXi4UIbDOLhvW3BAoGAKkercrDLkgloeUoBMX139MT/9oGsJke5Hbph\njMwPV55EJpdLVaF9W22o0ktRVkR4ACYescUGTd7wS84QZtpJ4BqvlKR79RFzgTPK\n56WLKacGsGzgZx9CCxS+VTFAgm2XWNcSXT90JxoF7DCpBRFrO0S4bPTBuU4mDzzj\nP7hKczsCgYEA3U9VfkRgG/wii169GBS+lIOvRztVALzcZNmKBO0ZK4gUr4hEuvQ1\nlx5Y69KrTGuS5n8bGDJofqsTuEvBRMQ3OrdHutAaNpprQlBXUsmvoh8x3d63XxqP\nu8eoyvth5Myi0eFoWITs3g+aNMB3Gfk+9ha4zejtnLXifnFFXUssQUA=\n-----END RSA PRIVATE KEY-----\n\" | sudo tee /home/ubuntu/c1m/site.pem \u003e /dev/null\nsudo chmod 400 /home/ubuntu/c1m/site.pem\n\nNODE_NAME=\"$(hostname)\"\nlogger \"Node name: $NODE_NAME\"\n\nMETADATA_LOCAL_IP=`curl -H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/0/ip`\nlogger \"Local IP: $METADATA_LOCAL_IP\"\n\nlogger \"Configuring Consul default\"\nCONSUL_DEFAULT_CONFIG=/etc/consul.d/default.json\nCONSUL_DATA_DIR=/opt/consul/data\n\nsudo mkdir -p $CONSUL_DATA_DIR\nsudo chmod 0755 $CONSUL_DATA_DIR\n\nsudo sed -i -- \"s/{{ data_dir }}/${CONSUL_DATA_DIR//\\//\\\\\\/}/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ local_ip }}/$METADATA_LOCAL_IP/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ datacenter }}/gce-us-central1/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ node_name }}/$NODE_NAME/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ log_level }}/INFO/g\" $CONSUL_DEFAULT_CONFIG\n\nlogger \"Configuring Consul server\"\nCONSUL_SERVER_CONFIG=/etc/consul.d/consul_server.json\n\nsudo sed -i -- \"s/{{ bootstrap_expect }}/3/g\" $CONSUL_SERVER_CONFIG\nsudo sed -i -- \"s/\\\"{{ tags }}\\\"/\\\"gce\\\", \\\"gce-us-central1\\\", \\\"us-central1-b\\\", \\\"n1-standard-2\\\"/g\" $CONSUL_SERVER_CONFIG\n\necho $(date '+%s') | sudo tee -a /etc/consul.d/configured \u003e /dev/null\nsudo service consul start || sudo service consul restart\n\nlogger \"Done\"\n",
                            "name": "c1m-consul-server-us-central1-b-n1-standard-2-1",
                            "network.#": "0",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "23.236.62.107",
                            "network_interface.0.access_config.0.nat_ip": "",
                            "network_interface.0.address": "10.140.0.4",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "c1m",
                            "network_interface.0.subnetwork": "",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/nomadspark-143720/zones/us-central1-b/instances/c1m-consul-server-us-central1-b-n1-standard-2-1",
                            "service_account.#": "0",
                            "tags.#": "4",
                            "tags.1919306328": "us-central1-b",
                            "tags.2970256145": "c1m-consul-server-us-central1-b-1",
                            "tags.4242067202": "c1m-consul-server",
                            "tags.524156989": "n1-standard-2",
                            "tags_fingerprint": "5vSZGaD7K0c=",
                            "zone": "us-central1-b"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "google.${var.region}"
                },
                "google_compute_instance.consul_server.1": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "template_file.consul_server"
                    ],
                    "primary": {
                        "id": "c1m-consul-server-us-central1-b-n1-standard-2-2",
                        "attributes": {
                            "can_ip_forward": "false",
                            "disk.#": "1",
                            "disk.0.auto_delete": "true",
                            "disk.0.device_name": "",
                            "disk.0.disk": "",
                            "disk.0.image": "packer-c1m-consul-server-1474268577",
                            "disk.0.scratch": "false",
                            "disk.0.size": "10",
                            "disk.0.type": "pd-ssd",
                            "id": "c1m-consul-server-us-central1-b-n1-standard-2-2",
                            "machine_type": "n1-standard-2",
                            "metadata.%": "1",
                            "metadata.sshKeys": "ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDL3JLxeUjavieArnERAx2zW5eKMNaudGJi3JNRJHEOogXOMFIPMnNvikTESdQ/OOSpz2E2uh58wENt5tKmsUAqsCVl2cJyOVPaSmoCopVLAWtiR/iiO10tp2mLtYfyykQpWkVo8WMP+29EPuyjuKvj7nSm6PCifDKsx+pTCvxjG/ZtNW+Ru7wA7HleTmE+AAlRUV3KtndzA/2yT9mrWV/WTwya5Z0kswO/kLH5tuDcKwyf907y/HMc7V6PZfpKA4004OdBYAkP0nYoYNPQ+cDD9LQ+d5+/UFgzqGbox6VAdx8nD2ns83HM7JuTyg/rmD4sr6Nj2h/SXFRVUiWD2UEZ Mike@MIHBE-M-RCNE\n",
                            "metadata_fingerprint": "z7WbpFIDRxg=",
                            "metadata_startup_script": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT consul_server.sh: $1\"\n  echo \"$DT consul_server.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nlogger \"Setting private key\"\necho \"-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAy9yS8XlI2r4ngK5xEQMds1uXijDWrnRiYtyTUSRxDqIFzjBS\nDzJzb4pExEnUPzjkqc9hNroefMBDbebSprFAKrAlZdnCcjlT2kpqAqKVSwFrYkf4\nojtdLadpi7WH8spEKVpFaPFjD/tvRD7so7ir4+50pujwonwyrMfqUwr8Yxv2bTVv\nkbu8AOx5Xk5hPgAJUVFdyrZ3cwP9sk/Zq1lf1k8MmuWdJLMDv5Cx+bbg3CsMn/dO\n8vxzHO1ej2X6SgONNODnQWAJD9J2KGDT0PnAw/S0Pnefv1BYM6hm6MelQHcfJw9p\n7PNxzOybk8oP65g+LK+jY9of0lxUVVIlg9lBGQIDAQABAoIBAQDJWSVFHM5pRjDL\n9v8zl0lJcehdk9kl20ula0iRdxW3Jy3mtXEHE4RSIVXELUtV2kJ2uZ3BqNgdzOOM\nc9OQ0jaXMvzs+MQFfzujuaW0zpH30AIYww7+ZPWl9tjXJUeN9FqYIVG20dtO2L7P\nv/qHxgj4CffrNt0dDuAaKSX2OT6IPzu4eFS2fZdZtJBDiGrG7ionFiZHHVbeSI5g\nTnhTsRJqz/+B8rrDQkrqn4FCwWvBT6FNQg5+bBvd6J3FukYBFrHUP1frb8Qz11oA\nkmiKKRkCBkwtH6Ni6Veo2/lJcsAfgel6uiOPVWtj2o2vt/E7VYq/l63Kl2taZMkO\ny0qE1gqVAoGBAPs7x9JGgeY3xmSssoxoFNlzDk20tlVzZoHlS6qQMsnhqKfwrPKy\nbq657cNyLRxmrsjVBf0VaBteXSQWaUacvE3HX8pTKUP5xSYM/j0wkXUC/M9hneE0\nuLIXIbMGHW54gQNSaT5TvtOVDALVe5S2BzuB0xlp5C8tVX98JiuD60UXAoGBAM+6\ntlRVaKF158FAeYNXrUmoTq1Vb3wI0RC+rSIO227wxsRmD5AqbtTRlGjd7WoR0K9M\n9M8c7GwcwKl4jEWGruI0sdtr7WAVC5XRNlwXUH6N/OFhc/AaRtzf9SLdFZWt2sau\nl5VUB5J+pb6uoW/DNLux/5wl+XnYuKby5rxqq+lPAoGBANxwd8RpWVFHXyy223OX\nX7Ps4IAOMG6J80fGib3/CJFbD0FMTHQnXDazrYvwguSItJRDVh3ayp45DkC76WOr\n4w3cApDkpzCd1/6rJ+lI1Fh3ZpwQaxdPyz94THloxCpKUek4RmAJ20aLYR6bcvPp\nRC9SmoeSAkXi4UIbDOLhvW3BAoGAKkercrDLkgloeUoBMX139MT/9oGsJke5Hbph\njMwPV55EJpdLVaF9W22o0ktRVkR4ACYescUGTd7wS84QZtpJ4BqvlKR79RFzgTPK\n56WLKacGsGzgZx9CCxS+VTFAgm2XWNcSXT90JxoF7DCpBRFrO0S4bPTBuU4mDzzj\nP7hKczsCgYEA3U9VfkRgG/wii169GBS+lIOvRztVALzcZNmKBO0ZK4gUr4hEuvQ1\nlx5Y69KrTGuS5n8bGDJofqsTuEvBRMQ3OrdHutAaNpprQlBXUsmvoh8x3d63XxqP\nu8eoyvth5Myi0eFoWITs3g+aNMB3Gfk+9ha4zejtnLXifnFFXUssQUA=\n-----END RSA PRIVATE KEY-----\n\" | sudo tee /home/ubuntu/c1m/site.pem \u003e /dev/null\nsudo chmod 400 /home/ubuntu/c1m/site.pem\n\nNODE_NAME=\"$(hostname)\"\nlogger \"Node name: $NODE_NAME\"\n\nMETADATA_LOCAL_IP=`curl -H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/0/ip`\nlogger \"Local IP: $METADATA_LOCAL_IP\"\n\nlogger \"Configuring Consul default\"\nCONSUL_DEFAULT_CONFIG=/etc/consul.d/default.json\nCONSUL_DATA_DIR=/opt/consul/data\n\nsudo mkdir -p $CONSUL_DATA_DIR\nsudo chmod 0755 $CONSUL_DATA_DIR\n\nsudo sed -i -- \"s/{{ data_dir }}/${CONSUL_DATA_DIR//\\//\\\\\\/}/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ local_ip }}/$METADATA_LOCAL_IP/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ datacenter }}/gce-us-central1/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ node_name }}/$NODE_NAME/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ log_level }}/INFO/g\" $CONSUL_DEFAULT_CONFIG\n\nlogger \"Configuring Consul server\"\nCONSUL_SERVER_CONFIG=/etc/consul.d/consul_server.json\n\nsudo sed -i -- \"s/{{ bootstrap_expect }}/3/g\" $CONSUL_SERVER_CONFIG\nsudo sed -i -- \"s/\\\"{{ tags }}\\\"/\\\"gce\\\", \\\"gce-us-central1\\\", \\\"us-central1-b\\\", \\\"n1-standard-2\\\"/g\" $CONSUL_SERVER_CONFIG\n\necho $(date '+%s') | sudo tee -a /etc/consul.d/configured \u003e /dev/null\nsudo service consul start || sudo service consul restart\n\nlogger \"Done\"\n",
                            "name": "c1m-consul-server-us-central1-b-n1-standard-2-2",
                            "network.#": "0",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "104.154.253.186",
                            "network_interface.0.access_config.0.nat_ip": "",
                            "network_interface.0.address": "10.140.0.2",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "c1m",
                            "network_interface.0.subnetwork": "",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/nomadspark-143720/zones/us-central1-b/instances/c1m-consul-server-us-central1-b-n1-standard-2-2",
                            "service_account.#": "0",
                            "tags.#": "4",
                            "tags.1919306328": "us-central1-b",
                            "tags.4242067202": "c1m-consul-server",
                            "tags.524156989": "n1-standard-2",
                            "tags.671339179": "c1m-consul-server-us-central1-b-2",
                            "tags_fingerprint": "tVO6n32YvRY=",
                            "zone": "us-central1-b"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "google.${var.region}"
                },
                "google_compute_instance.consul_server.2": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "template_file.consul_server"
                    ],
                    "primary": {
                        "id": "c1m-consul-server-us-central1-b-n1-standard-2-3",
                        "attributes": {
                            "can_ip_forward": "false",
                            "disk.#": "1",
                            "disk.0.auto_delete": "true",
                            "disk.0.device_name": "",
                            "disk.0.disk": "",
                            "disk.0.image": "packer-c1m-consul-server-1474268577",
                            "disk.0.scratch": "false",
                            "disk.0.size": "10",
                            "disk.0.type": "pd-ssd",
                            "id": "c1m-consul-server-us-central1-b-n1-standard-2-3",
                            "machine_type": "n1-standard-2",
                            "metadata.%": "1",
                            "metadata.sshKeys": "ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDL3JLxeUjavieArnERAx2zW5eKMNaudGJi3JNRJHEOogXOMFIPMnNvikTESdQ/OOSpz2E2uh58wENt5tKmsUAqsCVl2cJyOVPaSmoCopVLAWtiR/iiO10tp2mLtYfyykQpWkVo8WMP+29EPuyjuKvj7nSm6PCifDKsx+pTCvxjG/ZtNW+Ru7wA7HleTmE+AAlRUV3KtndzA/2yT9mrWV/WTwya5Z0kswO/kLH5tuDcKwyf907y/HMc7V6PZfpKA4004OdBYAkP0nYoYNPQ+cDD9LQ+d5+/UFgzqGbox6VAdx8nD2ns83HM7JuTyg/rmD4sr6Nj2h/SXFRVUiWD2UEZ Mike@MIHBE-M-RCNE\n",
                            "metadata_fingerprint": "z7WbpFIDRxg=",
                            "metadata_startup_script": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT consul_server.sh: $1\"\n  echo \"$DT consul_server.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nlogger \"Setting private key\"\necho \"-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAy9yS8XlI2r4ngK5xEQMds1uXijDWrnRiYtyTUSRxDqIFzjBS\nDzJzb4pExEnUPzjkqc9hNroefMBDbebSprFAKrAlZdnCcjlT2kpqAqKVSwFrYkf4\nojtdLadpi7WH8spEKVpFaPFjD/tvRD7so7ir4+50pujwonwyrMfqUwr8Yxv2bTVv\nkbu8AOx5Xk5hPgAJUVFdyrZ3cwP9sk/Zq1lf1k8MmuWdJLMDv5Cx+bbg3CsMn/dO\n8vxzHO1ej2X6SgONNODnQWAJD9J2KGDT0PnAw/S0Pnefv1BYM6hm6MelQHcfJw9p\n7PNxzOybk8oP65g+LK+jY9of0lxUVVIlg9lBGQIDAQABAoIBAQDJWSVFHM5pRjDL\n9v8zl0lJcehdk9kl20ula0iRdxW3Jy3mtXEHE4RSIVXELUtV2kJ2uZ3BqNgdzOOM\nc9OQ0jaXMvzs+MQFfzujuaW0zpH30AIYww7+ZPWl9tjXJUeN9FqYIVG20dtO2L7P\nv/qHxgj4CffrNt0dDuAaKSX2OT6IPzu4eFS2fZdZtJBDiGrG7ionFiZHHVbeSI5g\nTnhTsRJqz/+B8rrDQkrqn4FCwWvBT6FNQg5+bBvd6J3FukYBFrHUP1frb8Qz11oA\nkmiKKRkCBkwtH6Ni6Veo2/lJcsAfgel6uiOPVWtj2o2vt/E7VYq/l63Kl2taZMkO\ny0qE1gqVAoGBAPs7x9JGgeY3xmSssoxoFNlzDk20tlVzZoHlS6qQMsnhqKfwrPKy\nbq657cNyLRxmrsjVBf0VaBteXSQWaUacvE3HX8pTKUP5xSYM/j0wkXUC/M9hneE0\nuLIXIbMGHW54gQNSaT5TvtOVDALVe5S2BzuB0xlp5C8tVX98JiuD60UXAoGBAM+6\ntlRVaKF158FAeYNXrUmoTq1Vb3wI0RC+rSIO227wxsRmD5AqbtTRlGjd7WoR0K9M\n9M8c7GwcwKl4jEWGruI0sdtr7WAVC5XRNlwXUH6N/OFhc/AaRtzf9SLdFZWt2sau\nl5VUB5J+pb6uoW/DNLux/5wl+XnYuKby5rxqq+lPAoGBANxwd8RpWVFHXyy223OX\nX7Ps4IAOMG6J80fGib3/CJFbD0FMTHQnXDazrYvwguSItJRDVh3ayp45DkC76WOr\n4w3cApDkpzCd1/6rJ+lI1Fh3ZpwQaxdPyz94THloxCpKUek4RmAJ20aLYR6bcvPp\nRC9SmoeSAkXi4UIbDOLhvW3BAoGAKkercrDLkgloeUoBMX139MT/9oGsJke5Hbph\njMwPV55EJpdLVaF9W22o0ktRVkR4ACYescUGTd7wS84QZtpJ4BqvlKR79RFzgTPK\n56WLKacGsGzgZx9CCxS+VTFAgm2XWNcSXT90JxoF7DCpBRFrO0S4bPTBuU4mDzzj\nP7hKczsCgYEA3U9VfkRgG/wii169GBS+lIOvRztVALzcZNmKBO0ZK4gUr4hEuvQ1\nlx5Y69KrTGuS5n8bGDJofqsTuEvBRMQ3OrdHutAaNpprQlBXUsmvoh8x3d63XxqP\nu8eoyvth5Myi0eFoWITs3g+aNMB3Gfk+9ha4zejtnLXifnFFXUssQUA=\n-----END RSA PRIVATE KEY-----\n\" | sudo tee /home/ubuntu/c1m/site.pem \u003e /dev/null\nsudo chmod 400 /home/ubuntu/c1m/site.pem\n\nNODE_NAME=\"$(hostname)\"\nlogger \"Node name: $NODE_NAME\"\n\nMETADATA_LOCAL_IP=`curl -H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/0/ip`\nlogger \"Local IP: $METADATA_LOCAL_IP\"\n\nlogger \"Configuring Consul default\"\nCONSUL_DEFAULT_CONFIG=/etc/consul.d/default.json\nCONSUL_DATA_DIR=/opt/consul/data\n\nsudo mkdir -p $CONSUL_DATA_DIR\nsudo chmod 0755 $CONSUL_DATA_DIR\n\nsudo sed -i -- \"s/{{ data_dir }}/${CONSUL_DATA_DIR//\\//\\\\\\/}/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ local_ip }}/$METADATA_LOCAL_IP/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ datacenter }}/gce-us-central1/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ node_name }}/$NODE_NAME/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ log_level }}/INFO/g\" $CONSUL_DEFAULT_CONFIG\n\nlogger \"Configuring Consul server\"\nCONSUL_SERVER_CONFIG=/etc/consul.d/consul_server.json\n\nsudo sed -i -- \"s/{{ bootstrap_expect }}/3/g\" $CONSUL_SERVER_CONFIG\nsudo sed -i -- \"s/\\\"{{ tags }}\\\"/\\\"gce\\\", \\\"gce-us-central1\\\", \\\"us-central1-b\\\", \\\"n1-standard-2\\\"/g\" $CONSUL_SERVER_CONFIG\n\necho $(date '+%s') | sudo tee -a /etc/consul.d/configured \u003e /dev/null\nsudo service consul start || sudo service consul restart\n\nlogger \"Done\"\n",
                            "name": "c1m-consul-server-us-central1-b-n1-standard-2-3",
                            "network.#": "0",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "146.148.69.116",
                            "network_interface.0.access_config.0.nat_ip": "",
                            "network_interface.0.address": "10.140.0.3",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "c1m",
                            "network_interface.0.subnetwork": "",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/nomadspark-143720/zones/us-central1-b/instances/c1m-consul-server-us-central1-b-n1-standard-2-3",
                            "service_account.#": "0",
                            "tags.#": "4",
                            "tags.1594155581": "c1m-consul-server-us-central1-b-3",
                            "tags.1919306328": "us-central1-b",
                            "tags.4242067202": "c1m-consul-server",
                            "tags.524156989": "n1-standard-2",
                            "tags_fingerprint": "CU1gC-KA8lk=",
                            "zone": "us-central1-b"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "google.${var.region}"
                },
                "null_resource.consul_cluster_join": {
                    "type": "null_resource",
                    "depends_on": [
                        "google_compute_instance.consul_server",
                        "google_compute_instance.consul_server",
                        "google_compute_instance.consul_server",
                        "module.consul_cluster_join_template"
                    ],
                    "primary": {
                        "id": "1585694617053464880",
                        "attributes": {
                            "id": "1585694617053464880",
                            "triggers.%": "1",
                            "triggers.private_ips": "10.140.0.4,10.140.0.2,10.140.0.3"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "null_resource.prepared_queries": {
                    "type": "null_resource",
                    "depends_on": [
                        "google_compute_instance.consul_server",
                        "google_compute_instance.consul_server",
                        "google_compute_instance.consul_server",
                        "module.nodejs_pq_template",
                        "module.redis_pq_template",
                        "null_resource.consul_cluster_join"
                    ],
                    "primary": {
                        "id": "6844977262540605772",
                        "attributes": {
                            "id": "6844977262540605772",
                            "triggers.%": "1",
                            "triggers.private_ips": "10.140.0.4,10.140.0.2,10.140.0.3"
                        },
                        "meta": {},
                        "tainted": true
                    },
                    "deposed": [],
                    "provider": ""
                },
                "template_file.consul_server.0": {
                    "type": "template_file",
                    "depends_on": [
                        "module.consul_server_template"
                    ],
                    "primary": {
                        "id": "9fd7a363823c240f688dc00994960162b2337718cb576fc1252f0ec09e2616ce",
                        "attributes": {
                            "id": "9fd7a363823c240f688dc00994960162b2337718cb576fc1252f0ec09e2616ce",
                            "rendered": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT consul_server.sh: $1\"\n  echo \"$DT consul_server.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nlogger \"Setting private key\"\necho \"-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAy9yS8XlI2r4ngK5xEQMds1uXijDWrnRiYtyTUSRxDqIFzjBS\nDzJzb4pExEnUPzjkqc9hNroefMBDbebSprFAKrAlZdnCcjlT2kpqAqKVSwFrYkf4\nojtdLadpi7WH8spEKVpFaPFjD/tvRD7so7ir4+50pujwonwyrMfqUwr8Yxv2bTVv\nkbu8AOx5Xk5hPgAJUVFdyrZ3cwP9sk/Zq1lf1k8MmuWdJLMDv5Cx+bbg3CsMn/dO\n8vxzHO1ej2X6SgONNODnQWAJD9J2KGDT0PnAw/S0Pnefv1BYM6hm6MelQHcfJw9p\n7PNxzOybk8oP65g+LK+jY9of0lxUVVIlg9lBGQIDAQABAoIBAQDJWSVFHM5pRjDL\n9v8zl0lJcehdk9kl20ula0iRdxW3Jy3mtXEHE4RSIVXELUtV2kJ2uZ3BqNgdzOOM\nc9OQ0jaXMvzs+MQFfzujuaW0zpH30AIYww7+ZPWl9tjXJUeN9FqYIVG20dtO2L7P\nv/qHxgj4CffrNt0dDuAaKSX2OT6IPzu4eFS2fZdZtJBDiGrG7ionFiZHHVbeSI5g\nTnhTsRJqz/+B8rrDQkrqn4FCwWvBT6FNQg5+bBvd6J3FukYBFrHUP1frb8Qz11oA\nkmiKKRkCBkwtH6Ni6Veo2/lJcsAfgel6uiOPVWtj2o2vt/E7VYq/l63Kl2taZMkO\ny0qE1gqVAoGBAPs7x9JGgeY3xmSssoxoFNlzDk20tlVzZoHlS6qQMsnhqKfwrPKy\nbq657cNyLRxmrsjVBf0VaBteXSQWaUacvE3HX8pTKUP5xSYM/j0wkXUC/M9hneE0\nuLIXIbMGHW54gQNSaT5TvtOVDALVe5S2BzuB0xlp5C8tVX98JiuD60UXAoGBAM+6\ntlRVaKF158FAeYNXrUmoTq1Vb3wI0RC+rSIO227wxsRmD5AqbtTRlGjd7WoR0K9M\n9M8c7GwcwKl4jEWGruI0sdtr7WAVC5XRNlwXUH6N/OFhc/AaRtzf9SLdFZWt2sau\nl5VUB5J+pb6uoW/DNLux/5wl+XnYuKby5rxqq+lPAoGBANxwd8RpWVFHXyy223OX\nX7Ps4IAOMG6J80fGib3/CJFbD0FMTHQnXDazrYvwguSItJRDVh3ayp45DkC76WOr\n4w3cApDkpzCd1/6rJ+lI1Fh3ZpwQaxdPyz94THloxCpKUek4RmAJ20aLYR6bcvPp\nRC9SmoeSAkXi4UIbDOLhvW3BAoGAKkercrDLkgloeUoBMX139MT/9oGsJke5Hbph\njMwPV55EJpdLVaF9W22o0ktRVkR4ACYescUGTd7wS84QZtpJ4BqvlKR79RFzgTPK\n56WLKacGsGzgZx9CCxS+VTFAgm2XWNcSXT90JxoF7DCpBRFrO0S4bPTBuU4mDzzj\nP7hKczsCgYEA3U9VfkRgG/wii169GBS+lIOvRztVALzcZNmKBO0ZK4gUr4hEuvQ1\nlx5Y69KrTGuS5n8bGDJofqsTuEvBRMQ3OrdHutAaNpprQlBXUsmvoh8x3d63XxqP\nu8eoyvth5Myi0eFoWITs3g+aNMB3Gfk+9ha4zejtnLXifnFFXUssQUA=\n-----END RSA PRIVATE KEY-----\n\" | sudo tee /home/ubuntu/c1m/site.pem \u003e /dev/null\nsudo chmod 400 /home/ubuntu/c1m/site.pem\n\nNODE_NAME=\"$(hostname)\"\nlogger \"Node name: $NODE_NAME\"\n\nMETADATA_LOCAL_IP=`curl -H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/0/ip`\nlogger \"Local IP: $METADATA_LOCAL_IP\"\n\nlogger \"Configuring Consul default\"\nCONSUL_DEFAULT_CONFIG=/etc/consul.d/default.json\nCONSUL_DATA_DIR=/opt/consul/data\n\nsudo mkdir -p $CONSUL_DATA_DIR\nsudo chmod 0755 $CONSUL_DATA_DIR\n\nsudo sed -i -- \"s/{{ data_dir }}/${CONSUL_DATA_DIR//\\//\\\\\\/}/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ local_ip }}/$METADATA_LOCAL_IP/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ datacenter }}/gce-us-central1/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ node_name }}/$NODE_NAME/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ log_level }}/INFO/g\" $CONSUL_DEFAULT_CONFIG\n\nlogger \"Configuring Consul server\"\nCONSUL_SERVER_CONFIG=/etc/consul.d/consul_server.json\n\nsudo sed -i -- \"s/{{ bootstrap_expect }}/3/g\" $CONSUL_SERVER_CONFIG\nsudo sed -i -- \"s/\\\"{{ tags }}\\\"/\\\"gce\\\", \\\"gce-us-central1\\\", \\\"us-central1-b\\\", \\\"n1-standard-2\\\"/g\" $CONSUL_SERVER_CONFIG\n\necho $(date '+%s') | sudo tee -a /etc/consul.d/configured \u003e /dev/null\nsudo service consul start || sudo service consul restart\n\nlogger \"Done\"\n",
                            "template": "/Users/Mike/code/hashistack-spark/terraform/_env/gce/.terraform/modules/673145f52dd3c28654fc94fe13285bb8/consul_server.sh.tpl",
                            "vars.%": "10",
                            "vars.bootstrap_expect": "3",
                            "vars.consul_log_level": "INFO",
                            "vars.data_dir": "/opt",
                            "vars.datacenter": "gce-us-central1",
                            "vars.local_ip_url": "-H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/0/ip",
                            "vars.machine_type": "n1-standard-2",
                            "vars.private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAy9yS8XlI2r4ngK5xEQMds1uXijDWrnRiYtyTUSRxDqIFzjBS\nDzJzb4pExEnUPzjkqc9hNroefMBDbebSprFAKrAlZdnCcjlT2kpqAqKVSwFrYkf4\nojtdLadpi7WH8spEKVpFaPFjD/tvRD7so7ir4+50pujwonwyrMfqUwr8Yxv2bTVv\nkbu8AOx5Xk5hPgAJUVFdyrZ3cwP9sk/Zq1lf1k8MmuWdJLMDv5Cx+bbg3CsMn/dO\n8vxzHO1ej2X6SgONNODnQWAJD9J2KGDT0PnAw/S0Pnefv1BYM6hm6MelQHcfJw9p\n7PNxzOybk8oP65g+LK+jY9of0lxUVVIlg9lBGQIDAQABAoIBAQDJWSVFHM5pRjDL\n9v8zl0lJcehdk9kl20ula0iRdxW3Jy3mtXEHE4RSIVXELUtV2kJ2uZ3BqNgdzOOM\nc9OQ0jaXMvzs+MQFfzujuaW0zpH30AIYww7+ZPWl9tjXJUeN9FqYIVG20dtO2L7P\nv/qHxgj4CffrNt0dDuAaKSX2OT6IPzu4eFS2fZdZtJBDiGrG7ionFiZHHVbeSI5g\nTnhTsRJqz/+B8rrDQkrqn4FCwWvBT6FNQg5+bBvd6J3FukYBFrHUP1frb8Qz11oA\nkmiKKRkCBkwtH6Ni6Veo2/lJcsAfgel6uiOPVWtj2o2vt/E7VYq/l63Kl2taZMkO\ny0qE1gqVAoGBAPs7x9JGgeY3xmSssoxoFNlzDk20tlVzZoHlS6qQMsnhqKfwrPKy\nbq657cNyLRxmrsjVBf0VaBteXSQWaUacvE3HX8pTKUP5xSYM/j0wkXUC/M9hneE0\nuLIXIbMGHW54gQNSaT5TvtOVDALVe5S2BzuB0xlp5C8tVX98JiuD60UXAoGBAM+6\ntlRVaKF158FAeYNXrUmoTq1Vb3wI0RC+rSIO227wxsRmD5AqbtTRlGjd7WoR0K9M\n9M8c7GwcwKl4jEWGruI0sdtr7WAVC5XRNlwXUH6N/OFhc/AaRtzf9SLdFZWt2sau\nl5VUB5J+pb6uoW/DNLux/5wl+XnYuKby5rxqq+lPAoGBANxwd8RpWVFHXyy223OX\nX7Ps4IAOMG6J80fGib3/CJFbD0FMTHQnXDazrYvwguSItJRDVh3ayp45DkC76WOr\n4w3cApDkpzCd1/6rJ+lI1Fh3ZpwQaxdPyz94THloxCpKUek4RmAJ20aLYR6bcvPp\nRC9SmoeSAkXi4UIbDOLhvW3BAoGAKkercrDLkgloeUoBMX139MT/9oGsJke5Hbph\njMwPV55EJpdLVaF9W22o0ktRVkR4ACYescUGTd7wS84QZtpJ4BqvlKR79RFzgTPK\n56WLKacGsGzgZx9CCxS+VTFAgm2XWNcSXT90JxoF7DCpBRFrO0S4bPTBuU4mDzzj\nP7hKczsCgYEA3U9VfkRgG/wii169GBS+lIOvRztVALzcZNmKBO0ZK4gUr4hEuvQ1\nlx5Y69KrTGuS5n8bGDJofqsTuEvBRMQ3OrdHutAaNpprQlBXUsmvoh8x3d63XxqP\nu8eoyvth5Myi0eFoWITs3g+aNMB3Gfk+9ha4zejtnLXifnFFXUssQUA=\n-----END RSA PRIVATE KEY-----\n",
                            "vars.provider": "gce",
                            "vars.region": "gce-us-central1",
                            "vars.zone": "us-central1-b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "template_file.consul_server.1": {
                    "type": "template_file",
                    "depends_on": [
                        "module.consul_server_template"
                    ],
                    "primary": {
                        "id": "9fd7a363823c240f688dc00994960162b2337718cb576fc1252f0ec09e2616ce",
                        "attributes": {
                            "id": "9fd7a363823c240f688dc00994960162b2337718cb576fc1252f0ec09e2616ce",
                            "rendered": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT consul_server.sh: $1\"\n  echo \"$DT consul_server.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nlogger \"Setting private key\"\necho \"-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAy9yS8XlI2r4ngK5xEQMds1uXijDWrnRiYtyTUSRxDqIFzjBS\nDzJzb4pExEnUPzjkqc9hNroefMBDbebSprFAKrAlZdnCcjlT2kpqAqKVSwFrYkf4\nojtdLadpi7WH8spEKVpFaPFjD/tvRD7so7ir4+50pujwonwyrMfqUwr8Yxv2bTVv\nkbu8AOx5Xk5hPgAJUVFdyrZ3cwP9sk/Zq1lf1k8MmuWdJLMDv5Cx+bbg3CsMn/dO\n8vxzHO1ej2X6SgONNODnQWAJD9J2KGDT0PnAw/S0Pnefv1BYM6hm6MelQHcfJw9p\n7PNxzOybk8oP65g+LK+jY9of0lxUVVIlg9lBGQIDAQABAoIBAQDJWSVFHM5pRjDL\n9v8zl0lJcehdk9kl20ula0iRdxW3Jy3mtXEHE4RSIVXELUtV2kJ2uZ3BqNgdzOOM\nc9OQ0jaXMvzs+MQFfzujuaW0zpH30AIYww7+ZPWl9tjXJUeN9FqYIVG20dtO2L7P\nv/qHxgj4CffrNt0dDuAaKSX2OT6IPzu4eFS2fZdZtJBDiGrG7ionFiZHHVbeSI5g\nTnhTsRJqz/+B8rrDQkrqn4FCwWvBT6FNQg5+bBvd6J3FukYBFrHUP1frb8Qz11oA\nkmiKKRkCBkwtH6Ni6Veo2/lJcsAfgel6uiOPVWtj2o2vt/E7VYq/l63Kl2taZMkO\ny0qE1gqVAoGBAPs7x9JGgeY3xmSssoxoFNlzDk20tlVzZoHlS6qQMsnhqKfwrPKy\nbq657cNyLRxmrsjVBf0VaBteXSQWaUacvE3HX8pTKUP5xSYM/j0wkXUC/M9hneE0\nuLIXIbMGHW54gQNSaT5TvtOVDALVe5S2BzuB0xlp5C8tVX98JiuD60UXAoGBAM+6\ntlRVaKF158FAeYNXrUmoTq1Vb3wI0RC+rSIO227wxsRmD5AqbtTRlGjd7WoR0K9M\n9M8c7GwcwKl4jEWGruI0sdtr7WAVC5XRNlwXUH6N/OFhc/AaRtzf9SLdFZWt2sau\nl5VUB5J+pb6uoW/DNLux/5wl+XnYuKby5rxqq+lPAoGBANxwd8RpWVFHXyy223OX\nX7Ps4IAOMG6J80fGib3/CJFbD0FMTHQnXDazrYvwguSItJRDVh3ayp45DkC76WOr\n4w3cApDkpzCd1/6rJ+lI1Fh3ZpwQaxdPyz94THloxCpKUek4RmAJ20aLYR6bcvPp\nRC9SmoeSAkXi4UIbDOLhvW3BAoGAKkercrDLkgloeUoBMX139MT/9oGsJke5Hbph\njMwPV55EJpdLVaF9W22o0ktRVkR4ACYescUGTd7wS84QZtpJ4BqvlKR79RFzgTPK\n56WLKacGsGzgZx9CCxS+VTFAgm2XWNcSXT90JxoF7DCpBRFrO0S4bPTBuU4mDzzj\nP7hKczsCgYEA3U9VfkRgG/wii169GBS+lIOvRztVALzcZNmKBO0ZK4gUr4hEuvQ1\nlx5Y69KrTGuS5n8bGDJofqsTuEvBRMQ3OrdHutAaNpprQlBXUsmvoh8x3d63XxqP\nu8eoyvth5Myi0eFoWITs3g+aNMB3Gfk+9ha4zejtnLXifnFFXUssQUA=\n-----END RSA PRIVATE KEY-----\n\" | sudo tee /home/ubuntu/c1m/site.pem \u003e /dev/null\nsudo chmod 400 /home/ubuntu/c1m/site.pem\n\nNODE_NAME=\"$(hostname)\"\nlogger \"Node name: $NODE_NAME\"\n\nMETADATA_LOCAL_IP=`curl -H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/0/ip`\nlogger \"Local IP: $METADATA_LOCAL_IP\"\n\nlogger \"Configuring Consul default\"\nCONSUL_DEFAULT_CONFIG=/etc/consul.d/default.json\nCONSUL_DATA_DIR=/opt/consul/data\n\nsudo mkdir -p $CONSUL_DATA_DIR\nsudo chmod 0755 $CONSUL_DATA_DIR\n\nsudo sed -i -- \"s/{{ data_dir }}/${CONSUL_DATA_DIR//\\//\\\\\\/}/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ local_ip }}/$METADATA_LOCAL_IP/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ datacenter }}/gce-us-central1/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ node_name }}/$NODE_NAME/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ log_level }}/INFO/g\" $CONSUL_DEFAULT_CONFIG\n\nlogger \"Configuring Consul server\"\nCONSUL_SERVER_CONFIG=/etc/consul.d/consul_server.json\n\nsudo sed -i -- \"s/{{ bootstrap_expect }}/3/g\" $CONSUL_SERVER_CONFIG\nsudo sed -i -- \"s/\\\"{{ tags }}\\\"/\\\"gce\\\", \\\"gce-us-central1\\\", \\\"us-central1-b\\\", \\\"n1-standard-2\\\"/g\" $CONSUL_SERVER_CONFIG\n\necho $(date '+%s') | sudo tee -a /etc/consul.d/configured \u003e /dev/null\nsudo service consul start || sudo service consul restart\n\nlogger \"Done\"\n",
                            "template": "/Users/Mike/code/hashistack-spark/terraform/_env/gce/.terraform/modules/673145f52dd3c28654fc94fe13285bb8/consul_server.sh.tpl",
                            "vars.%": "10",
                            "vars.bootstrap_expect": "3",
                            "vars.consul_log_level": "INFO",
                            "vars.data_dir": "/opt",
                            "vars.datacenter": "gce-us-central1",
                            "vars.local_ip_url": "-H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/0/ip",
                            "vars.machine_type": "n1-standard-2",
                            "vars.private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAy9yS8XlI2r4ngK5xEQMds1uXijDWrnRiYtyTUSRxDqIFzjBS\nDzJzb4pExEnUPzjkqc9hNroefMBDbebSprFAKrAlZdnCcjlT2kpqAqKVSwFrYkf4\nojtdLadpi7WH8spEKVpFaPFjD/tvRD7so7ir4+50pujwonwyrMfqUwr8Yxv2bTVv\nkbu8AOx5Xk5hPgAJUVFdyrZ3cwP9sk/Zq1lf1k8MmuWdJLMDv5Cx+bbg3CsMn/dO\n8vxzHO1ej2X6SgONNODnQWAJD9J2KGDT0PnAw/S0Pnefv1BYM6hm6MelQHcfJw9p\n7PNxzOybk8oP65g+LK+jY9of0lxUVVIlg9lBGQIDAQABAoIBAQDJWSVFHM5pRjDL\n9v8zl0lJcehdk9kl20ula0iRdxW3Jy3mtXEHE4RSIVXELUtV2kJ2uZ3BqNgdzOOM\nc9OQ0jaXMvzs+MQFfzujuaW0zpH30AIYww7+ZPWl9tjXJUeN9FqYIVG20dtO2L7P\nv/qHxgj4CffrNt0dDuAaKSX2OT6IPzu4eFS2fZdZtJBDiGrG7ionFiZHHVbeSI5g\nTnhTsRJqz/+B8rrDQkrqn4FCwWvBT6FNQg5+bBvd6J3FukYBFrHUP1frb8Qz11oA\nkmiKKRkCBkwtH6Ni6Veo2/lJcsAfgel6uiOPVWtj2o2vt/E7VYq/l63Kl2taZMkO\ny0qE1gqVAoGBAPs7x9JGgeY3xmSssoxoFNlzDk20tlVzZoHlS6qQMsnhqKfwrPKy\nbq657cNyLRxmrsjVBf0VaBteXSQWaUacvE3HX8pTKUP5xSYM/j0wkXUC/M9hneE0\nuLIXIbMGHW54gQNSaT5TvtOVDALVe5S2BzuB0xlp5C8tVX98JiuD60UXAoGBAM+6\ntlRVaKF158FAeYNXrUmoTq1Vb3wI0RC+rSIO227wxsRmD5AqbtTRlGjd7WoR0K9M\n9M8c7GwcwKl4jEWGruI0sdtr7WAVC5XRNlwXUH6N/OFhc/AaRtzf9SLdFZWt2sau\nl5VUB5J+pb6uoW/DNLux/5wl+XnYuKby5rxqq+lPAoGBANxwd8RpWVFHXyy223OX\nX7Ps4IAOMG6J80fGib3/CJFbD0FMTHQnXDazrYvwguSItJRDVh3ayp45DkC76WOr\n4w3cApDkpzCd1/6rJ+lI1Fh3ZpwQaxdPyz94THloxCpKUek4RmAJ20aLYR6bcvPp\nRC9SmoeSAkXi4UIbDOLhvW3BAoGAKkercrDLkgloeUoBMX139MT/9oGsJke5Hbph\njMwPV55EJpdLVaF9W22o0ktRVkR4ACYescUGTd7wS84QZtpJ4BqvlKR79RFzgTPK\n56WLKacGsGzgZx9CCxS+VTFAgm2XWNcSXT90JxoF7DCpBRFrO0S4bPTBuU4mDzzj\nP7hKczsCgYEA3U9VfkRgG/wii169GBS+lIOvRztVALzcZNmKBO0ZK4gUr4hEuvQ1\nlx5Y69KrTGuS5n8bGDJofqsTuEvBRMQ3OrdHutAaNpprQlBXUsmvoh8x3d63XxqP\nu8eoyvth5Myi0eFoWITs3g+aNMB3Gfk+9ha4zejtnLXifnFFXUssQUA=\n-----END RSA PRIVATE KEY-----\n",
                            "vars.provider": "gce",
                            "vars.region": "gce-us-central1",
                            "vars.zone": "us-central1-b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "template_file.consul_server.2": {
                    "type": "template_file",
                    "depends_on": [
                        "module.consul_server_template"
                    ],
                    "primary": {
                        "id": "9fd7a363823c240f688dc00994960162b2337718cb576fc1252f0ec09e2616ce",
                        "attributes": {
                            "id": "9fd7a363823c240f688dc00994960162b2337718cb576fc1252f0ec09e2616ce",
                            "rendered": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT consul_server.sh: $1\"\n  echo \"$DT consul_server.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nlogger \"Setting private key\"\necho \"-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAy9yS8XlI2r4ngK5xEQMds1uXijDWrnRiYtyTUSRxDqIFzjBS\nDzJzb4pExEnUPzjkqc9hNroefMBDbebSprFAKrAlZdnCcjlT2kpqAqKVSwFrYkf4\nojtdLadpi7WH8spEKVpFaPFjD/tvRD7so7ir4+50pujwonwyrMfqUwr8Yxv2bTVv\nkbu8AOx5Xk5hPgAJUVFdyrZ3cwP9sk/Zq1lf1k8MmuWdJLMDv5Cx+bbg3CsMn/dO\n8vxzHO1ej2X6SgONNODnQWAJD9J2KGDT0PnAw/S0Pnefv1BYM6hm6MelQHcfJw9p\n7PNxzOybk8oP65g+LK+jY9of0lxUVVIlg9lBGQIDAQABAoIBAQDJWSVFHM5pRjDL\n9v8zl0lJcehdk9kl20ula0iRdxW3Jy3mtXEHE4RSIVXELUtV2kJ2uZ3BqNgdzOOM\nc9OQ0jaXMvzs+MQFfzujuaW0zpH30AIYww7+ZPWl9tjXJUeN9FqYIVG20dtO2L7P\nv/qHxgj4CffrNt0dDuAaKSX2OT6IPzu4eFS2fZdZtJBDiGrG7ionFiZHHVbeSI5g\nTnhTsRJqz/+B8rrDQkrqn4FCwWvBT6FNQg5+bBvd6J3FukYBFrHUP1frb8Qz11oA\nkmiKKRkCBkwtH6Ni6Veo2/lJcsAfgel6uiOPVWtj2o2vt/E7VYq/l63Kl2taZMkO\ny0qE1gqVAoGBAPs7x9JGgeY3xmSssoxoFNlzDk20tlVzZoHlS6qQMsnhqKfwrPKy\nbq657cNyLRxmrsjVBf0VaBteXSQWaUacvE3HX8pTKUP5xSYM/j0wkXUC/M9hneE0\nuLIXIbMGHW54gQNSaT5TvtOVDALVe5S2BzuB0xlp5C8tVX98JiuD60UXAoGBAM+6\ntlRVaKF158FAeYNXrUmoTq1Vb3wI0RC+rSIO227wxsRmD5AqbtTRlGjd7WoR0K9M\n9M8c7GwcwKl4jEWGruI0sdtr7WAVC5XRNlwXUH6N/OFhc/AaRtzf9SLdFZWt2sau\nl5VUB5J+pb6uoW/DNLux/5wl+XnYuKby5rxqq+lPAoGBANxwd8RpWVFHXyy223OX\nX7Ps4IAOMG6J80fGib3/CJFbD0FMTHQnXDazrYvwguSItJRDVh3ayp45DkC76WOr\n4w3cApDkpzCd1/6rJ+lI1Fh3ZpwQaxdPyz94THloxCpKUek4RmAJ20aLYR6bcvPp\nRC9SmoeSAkXi4UIbDOLhvW3BAoGAKkercrDLkgloeUoBMX139MT/9oGsJke5Hbph\njMwPV55EJpdLVaF9W22o0ktRVkR4ACYescUGTd7wS84QZtpJ4BqvlKR79RFzgTPK\n56WLKacGsGzgZx9CCxS+VTFAgm2XWNcSXT90JxoF7DCpBRFrO0S4bPTBuU4mDzzj\nP7hKczsCgYEA3U9VfkRgG/wii169GBS+lIOvRztVALzcZNmKBO0ZK4gUr4hEuvQ1\nlx5Y69KrTGuS5n8bGDJofqsTuEvBRMQ3OrdHutAaNpprQlBXUsmvoh8x3d63XxqP\nu8eoyvth5Myi0eFoWITs3g+aNMB3Gfk+9ha4zejtnLXifnFFXUssQUA=\n-----END RSA PRIVATE KEY-----\n\" | sudo tee /home/ubuntu/c1m/site.pem \u003e /dev/null\nsudo chmod 400 /home/ubuntu/c1m/site.pem\n\nNODE_NAME=\"$(hostname)\"\nlogger \"Node name: $NODE_NAME\"\n\nMETADATA_LOCAL_IP=`curl -H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/0/ip`\nlogger \"Local IP: $METADATA_LOCAL_IP\"\n\nlogger \"Configuring Consul default\"\nCONSUL_DEFAULT_CONFIG=/etc/consul.d/default.json\nCONSUL_DATA_DIR=/opt/consul/data\n\nsudo mkdir -p $CONSUL_DATA_DIR\nsudo chmod 0755 $CONSUL_DATA_DIR\n\nsudo sed -i -- \"s/{{ data_dir }}/${CONSUL_DATA_DIR//\\//\\\\\\/}/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ local_ip }}/$METADATA_LOCAL_IP/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ datacenter }}/gce-us-central1/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ node_name }}/$NODE_NAME/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ log_level }}/INFO/g\" $CONSUL_DEFAULT_CONFIG\n\nlogger \"Configuring Consul server\"\nCONSUL_SERVER_CONFIG=/etc/consul.d/consul_server.json\n\nsudo sed -i -- \"s/{{ bootstrap_expect }}/3/g\" $CONSUL_SERVER_CONFIG\nsudo sed -i -- \"s/\\\"{{ tags }}\\\"/\\\"gce\\\", \\\"gce-us-central1\\\", \\\"us-central1-b\\\", \\\"n1-standard-2\\\"/g\" $CONSUL_SERVER_CONFIG\n\necho $(date '+%s') | sudo tee -a /etc/consul.d/configured \u003e /dev/null\nsudo service consul start || sudo service consul restart\n\nlogger \"Done\"\n",
                            "template": "/Users/Mike/code/hashistack-spark/terraform/_env/gce/.terraform/modules/673145f52dd3c28654fc94fe13285bb8/consul_server.sh.tpl",
                            "vars.%": "10",
                            "vars.bootstrap_expect": "3",
                            "vars.consul_log_level": "INFO",
                            "vars.data_dir": "/opt",
                            "vars.datacenter": "gce-us-central1",
                            "vars.local_ip_url": "-H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/0/ip",
                            "vars.machine_type": "n1-standard-2",
                            "vars.private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAy9yS8XlI2r4ngK5xEQMds1uXijDWrnRiYtyTUSRxDqIFzjBS\nDzJzb4pExEnUPzjkqc9hNroefMBDbebSprFAKrAlZdnCcjlT2kpqAqKVSwFrYkf4\nojtdLadpi7WH8spEKVpFaPFjD/tvRD7so7ir4+50pujwonwyrMfqUwr8Yxv2bTVv\nkbu8AOx5Xk5hPgAJUVFdyrZ3cwP9sk/Zq1lf1k8MmuWdJLMDv5Cx+bbg3CsMn/dO\n8vxzHO1ej2X6SgONNODnQWAJD9J2KGDT0PnAw/S0Pnefv1BYM6hm6MelQHcfJw9p\n7PNxzOybk8oP65g+LK+jY9of0lxUVVIlg9lBGQIDAQABAoIBAQDJWSVFHM5pRjDL\n9v8zl0lJcehdk9kl20ula0iRdxW3Jy3mtXEHE4RSIVXELUtV2kJ2uZ3BqNgdzOOM\nc9OQ0jaXMvzs+MQFfzujuaW0zpH30AIYww7+ZPWl9tjXJUeN9FqYIVG20dtO2L7P\nv/qHxgj4CffrNt0dDuAaKSX2OT6IPzu4eFS2fZdZtJBDiGrG7ionFiZHHVbeSI5g\nTnhTsRJqz/+B8rrDQkrqn4FCwWvBT6FNQg5+bBvd6J3FukYBFrHUP1frb8Qz11oA\nkmiKKRkCBkwtH6Ni6Veo2/lJcsAfgel6uiOPVWtj2o2vt/E7VYq/l63Kl2taZMkO\ny0qE1gqVAoGBAPs7x9JGgeY3xmSssoxoFNlzDk20tlVzZoHlS6qQMsnhqKfwrPKy\nbq657cNyLRxmrsjVBf0VaBteXSQWaUacvE3HX8pTKUP5xSYM/j0wkXUC/M9hneE0\nuLIXIbMGHW54gQNSaT5TvtOVDALVe5S2BzuB0xlp5C8tVX98JiuD60UXAoGBAM+6\ntlRVaKF158FAeYNXrUmoTq1Vb3wI0RC+rSIO227wxsRmD5AqbtTRlGjd7WoR0K9M\n9M8c7GwcwKl4jEWGruI0sdtr7WAVC5XRNlwXUH6N/OFhc/AaRtzf9SLdFZWt2sau\nl5VUB5J+pb6uoW/DNLux/5wl+XnYuKby5rxqq+lPAoGBANxwd8RpWVFHXyy223OX\nX7Ps4IAOMG6J80fGib3/CJFbD0FMTHQnXDazrYvwguSItJRDVh3ayp45DkC76WOr\n4w3cApDkpzCd1/6rJ+lI1Fh3ZpwQaxdPyz94THloxCpKUek4RmAJ20aLYR6bcvPp\nRC9SmoeSAkXi4UIbDOLhvW3BAoGAKkercrDLkgloeUoBMX139MT/9oGsJke5Hbph\njMwPV55EJpdLVaF9W22o0ktRVkR4ACYescUGTd7wS84QZtpJ4BqvlKR79RFzgTPK\n56WLKacGsGzgZx9CCxS+VTFAgm2XWNcSXT90JxoF7DCpBRFrO0S4bPTBuU4mDzzj\nP7hKczsCgYEA3U9VfkRgG/wii169GBS+lIOvRztVALzcZNmKBO0ZK4gUr4hEuvQ1\nlx5Y69KrTGuS5n8bGDJofqsTuEvBRMQ3OrdHutAaNpprQlBXUsmvoh8x3d63XxqP\nu8eoyvth5Myi0eFoWITs3g+aNMB3Gfk+9ha4zejtnLXifnFFXUssQUA=\n-----END RSA PRIVATE KEY-----\n",
                            "vars.provider": "gce",
                            "vars.region": "gce-us-central1",
                            "vars.zone": "us-central1-b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "nomad_clients_igm"
            ],
            "outputs": {},
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "nomad_servers"
            ],
            "outputs": {
                "machine_types": {
                    "sensitive": false,
                    "type": "string",
                    "value": "n1-standard-2,n1-standard-2,n1-standard-2"
                },
                "names": {
                    "sensitive": false,
                    "type": "string",
                    "value": "c1m-nomad-server-us-central1-b-n1-standard-2-1,c1m-nomad-server-us-central1-b-n1-standard-2-2,c1m-nomad-server-us-central1-b-n1-standard-2-3"
                },
                "private_ips": {
                    "sensitive": false,
                    "type": "string",
                    "value": "10.140.0.6,10.140.0.7,10.140.0.2"
                },
                "public_ips": {
                    "sensitive": false,
                    "type": "string",
                    "value": "146.148.50.233,104.154.120.103,104.198.206.114"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "utility"
            ],
            "outputs": {
                "machine_type": {
                    "sensitive": false,
                    "type": "string",
                    "value": "n1-standard-1"
                },
                "name": {
                    "sensitive": false,
                    "type": "string",
                    "value": "c1m-utility-us-central1-b-n1-standard-1-1"
                },
                "private_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "10.140.0.7"
                },
                "public_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "104.154.110.85"
                }
            },
            "resources": {
                "google_compute_firewall.allow-http": {
                    "type": "google_compute_firewall",
                    "depends_on": [],
                    "primary": {
                        "id": "c1m-utility-allow-http",
                        "attributes": {
                            "allow.#": "1",
                            "allow.272637744.ports.#": "1",
                            "allow.272637744.ports.0": "80",
                            "allow.272637744.protocol": "tcp",
                            "description": "",
                            "id": "c1m-utility-allow-http",
                            "name": "c1m-utility-allow-http",
                            "network": "c1m",
                            "project": "nomadspark-143720",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/nomadspark-143720/global/firewalls/c1m-utility-allow-http",
                            "source_ranges.#": "1",
                            "source_ranges.1080289494": "0.0.0.0/0",
                            "source_tags.#": "0",
                            "target_tags.#": "2",
                            "target_tags.1943123815": "utility",
                            "target_tags.73585086": "c1m-utility"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "google_compute_instance.utility": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "template_file.utility"
                    ],
                    "primary": {
                        "id": "c1m-utility-us-central1-b-n1-standard-1-1",
                        "attributes": {
                            "can_ip_forward": "false",
                            "disk.#": "1",
                            "disk.0.auto_delete": "true",
                            "disk.0.device_name": "",
                            "disk.0.disk": "",
                            "disk.0.image": "packer-c1m-utility-1474225767",
                            "disk.0.scratch": "false",
                            "disk.0.size": "50",
                            "disk.0.type": "pd-ssd",
                            "id": "c1m-utility-us-central1-b-n1-standard-1-1",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.sshKeys": "ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDL3JLxeUjavieArnERAx2zW5eKMNaudGJi3JNRJHEOogXOMFIPMnNvikTESdQ/OOSpz2E2uh58wENt5tKmsUAqsCVl2cJyOVPaSmoCopVLAWtiR/iiO10tp2mLtYfyykQpWkVo8WMP+29EPuyjuKvj7nSm6PCifDKsx+pTCvxjG/ZtNW+Ru7wA7HleTmE+AAlRUV3KtndzA/2yT9mrWV/WTwya5Z0kswO/kLH5tuDcKwyf907y/HMc7V6PZfpKA4004OdBYAkP0nYoYNPQ+cDD9LQ+d5+/UFgzqGbox6VAdx8nD2ns83HM7JuTyg/rmD4sr6Nj2h/SXFRVUiWD2UEZ Mike@MIHBE-M-RCNE\n",
                            "metadata_fingerprint": "cwslxKKIUKc=",
                            "metadata_startup_script": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT utility.sh: $1\"\n  echo \"$DT utility.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nlogger \"Setting private key\"\necho \"-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAy9yS8XlI2r4ngK5xEQMds1uXijDWrnRiYtyTUSRxDqIFzjBS\nDzJzb4pExEnUPzjkqc9hNroefMBDbebSprFAKrAlZdnCcjlT2kpqAqKVSwFrYkf4\nojtdLadpi7WH8spEKVpFaPFjD/tvRD7so7ir4+50pujwonwyrMfqUwr8Yxv2bTVv\nkbu8AOx5Xk5hPgAJUVFdyrZ3cwP9sk/Zq1lf1k8MmuWdJLMDv5Cx+bbg3CsMn/dO\n8vxzHO1ej2X6SgONNODnQWAJD9J2KGDT0PnAw/S0Pnefv1BYM6hm6MelQHcfJw9p\n7PNxzOybk8oP65g+LK+jY9of0lxUVVIlg9lBGQIDAQABAoIBAQDJWSVFHM5pRjDL\n9v8zl0lJcehdk9kl20ula0iRdxW3Jy3mtXEHE4RSIVXELUtV2kJ2uZ3BqNgdzOOM\nc9OQ0jaXMvzs+MQFfzujuaW0zpH30AIYww7+ZPWl9tjXJUeN9FqYIVG20dtO2L7P\nv/qHxgj4CffrNt0dDuAaKSX2OT6IPzu4eFS2fZdZtJBDiGrG7ionFiZHHVbeSI5g\nTnhTsRJqz/+B8rrDQkrqn4FCwWvBT6FNQg5+bBvd6J3FukYBFrHUP1frb8Qz11oA\nkmiKKRkCBkwtH6Ni6Veo2/lJcsAfgel6uiOPVWtj2o2vt/E7VYq/l63Kl2taZMkO\ny0qE1gqVAoGBAPs7x9JGgeY3xmSssoxoFNlzDk20tlVzZoHlS6qQMsnhqKfwrPKy\nbq657cNyLRxmrsjVBf0VaBteXSQWaUacvE3HX8pTKUP5xSYM/j0wkXUC/M9hneE0\nuLIXIbMGHW54gQNSaT5TvtOVDALVe5S2BzuB0xlp5C8tVX98JiuD60UXAoGBAM+6\ntlRVaKF158FAeYNXrUmoTq1Vb3wI0RC+rSIO227wxsRmD5AqbtTRlGjd7WoR0K9M\n9M8c7GwcwKl4jEWGruI0sdtr7WAVC5XRNlwXUH6N/OFhc/AaRtzf9SLdFZWt2sau\nl5VUB5J+pb6uoW/DNLux/5wl+XnYuKby5rxqq+lPAoGBANxwd8RpWVFHXyy223OX\nX7Ps4IAOMG6J80fGib3/CJFbD0FMTHQnXDazrYvwguSItJRDVh3ayp45DkC76WOr\n4w3cApDkpzCd1/6rJ+lI1Fh3ZpwQaxdPyz94THloxCpKUek4RmAJ20aLYR6bcvPp\nRC9SmoeSAkXi4UIbDOLhvW3BAoGAKkercrDLkgloeUoBMX139MT/9oGsJke5Hbph\njMwPV55EJpdLVaF9W22o0ktRVkR4ACYescUGTd7wS84QZtpJ4BqvlKR79RFzgTPK\n56WLKacGsGzgZx9CCxS+VTFAgm2XWNcSXT90JxoF7DCpBRFrO0S4bPTBuU4mDzzj\nP7hKczsCgYEA3U9VfkRgG/wii169GBS+lIOvRztVALzcZNmKBO0ZK4gUr4hEuvQ1\nlx5Y69KrTGuS5n8bGDJofqsTuEvBRMQ3OrdHutAaNpprQlBXUsmvoh8x3d63XxqP\nu8eoyvth5Myi0eFoWITs3g+aNMB3Gfk+9ha4zejtnLXifnFFXUssQUA=\n-----END RSA PRIVATE KEY-----\n\" | sudo tee /home/ubuntu/c1m/site.pem \u003e /dev/null\nsudo chmod 400 /home/ubuntu/c1m/site.pem\n\nNODE_NAME=\"$(hostname)\"\nlogger \"Node name: $NODE_NAME\"\n\nMETADATA_LOCAL_IP=`curl -H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/0/ip`\nlogger \"Local IP: $METADATA_LOCAL_IP\"\n\nlogger \"Configuring Consul\"\nCONSUL_DEFAULT_CONFIG=/etc/consul.d/default.json\nCONSUL_DATA_DIR=/opt/consul/data\n\nsudo mkdir -p $CONSUL_DATA_DIR\nsudo chmod 0755 $CONSUL_DATA_DIR\n\nsudo sed -i -- \"s/{{ data_dir }}/${CONSUL_DATA_DIR//\\//\\\\\\/}/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ datacenter }}/gce-us-central1/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ node_name }}/$NODE_NAME/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ local_ip }}/$METADATA_LOCAL_IP/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ log_level }}/INFO/g\" $CONSUL_DEFAULT_CONFIG\n\nlogger \"Configuring Consul Utility\"\nCONSUL_UTILITY_CONFIG=/etc/consul.d/utility.json\n\nsudo sed -i -- \"s/\\\"{{ tags }}\\\"/\\\"gce\\\", \\\"gce-us-central1\\\", \\\"us-central1-b\\\", \\\"n1-standard-1\\\"/g\" $CONSUL_UTILITY_CONFIG\n\nlogger \"Configuring Consul Redis and Statsite\"\nsudo sed -i -- \"s/{{ local_ip }}/$METADATA_LOCAL_IP/g\" /etc/consul.d/redis.json\nsudo sed -i -- \"s/{{ local_ip }}/$METADATA_LOCAL_IP/g\" /etc/consul.d/statsite.json\n\necho $(date '+%s') | sudo tee -a /etc/consul.d/configured \u003e /dev/null\nsudo service consul start || sudo service consul restart\n\nSTATSITE_DATA_DIR=/opt/statsite/data\n\nsudo mkdir -p $STATSITE_DATA_DIR\nsudo chmod 0755 $STATSITE_DATA_DIR\n\nsudo sed -i -- \"s/{{ data_dir }}/${STATSITE_DATA_DIR//\\//\\\\\\/}/g\" /etc/statsite.d/default.conf\n\necho $(date '+%s') | sudo tee -a /etc/statsite.d/configured \u003e /dev/null\nsudo service statsite start || sudo service statsite restart\n\nlogger \"Done\"\n",
                            "name": "c1m-utility-us-central1-b-n1-standard-1-1",
                            "network.#": "0",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "104.154.110.85",
                            "network_interface.0.access_config.0.nat_ip": "",
                            "network_interface.0.address": "10.140.0.7",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "c1m",
                            "network_interface.0.subnetwork": "",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/nomadspark-143720/zones/us-central1-b/instances/c1m-utility-us-central1-b-n1-standard-1-1",
                            "service_account.#": "0",
                            "tags.#": "4",
                            "tags.1919306328": "us-central1-b",
                            "tags.2251772295": "n1-standard-1",
                            "tags.2832434375": "c1m-utility-us-central1-b-1",
                            "tags.73585086": "c1m-utility",
                            "tags_fingerprint": "Kc7eOqDOjF8=",
                            "zone": "us-central1-b"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "google.${var.region}"
                },
                "template_file.utility": {
                    "type": "template_file",
                    "depends_on": [
                        "module.utility_template"
                    ],
                    "primary": {
                        "id": "48a7306f79aedb5316792c20133f6eafd7a5e80e65da9e026a5f322494e0b1f0",
                        "attributes": {
                            "id": "48a7306f79aedb5316792c20133f6eafd7a5e80e65da9e026a5f322494e0b1f0",
                            "rendered": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT utility.sh: $1\"\n  echo \"$DT utility.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nlogger \"Setting private key\"\necho \"-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAy9yS8XlI2r4ngK5xEQMds1uXijDWrnRiYtyTUSRxDqIFzjBS\nDzJzb4pExEnUPzjkqc9hNroefMBDbebSprFAKrAlZdnCcjlT2kpqAqKVSwFrYkf4\nojtdLadpi7WH8spEKVpFaPFjD/tvRD7so7ir4+50pujwonwyrMfqUwr8Yxv2bTVv\nkbu8AOx5Xk5hPgAJUVFdyrZ3cwP9sk/Zq1lf1k8MmuWdJLMDv5Cx+bbg3CsMn/dO\n8vxzHO1ej2X6SgONNODnQWAJD9J2KGDT0PnAw/S0Pnefv1BYM6hm6MelQHcfJw9p\n7PNxzOybk8oP65g+LK+jY9of0lxUVVIlg9lBGQIDAQABAoIBAQDJWSVFHM5pRjDL\n9v8zl0lJcehdk9kl20ula0iRdxW3Jy3mtXEHE4RSIVXELUtV2kJ2uZ3BqNgdzOOM\nc9OQ0jaXMvzs+MQFfzujuaW0zpH30AIYww7+ZPWl9tjXJUeN9FqYIVG20dtO2L7P\nv/qHxgj4CffrNt0dDuAaKSX2OT6IPzu4eFS2fZdZtJBDiGrG7ionFiZHHVbeSI5g\nTnhTsRJqz/+B8rrDQkrqn4FCwWvBT6FNQg5+bBvd6J3FukYBFrHUP1frb8Qz11oA\nkmiKKRkCBkwtH6Ni6Veo2/lJcsAfgel6uiOPVWtj2o2vt/E7VYq/l63Kl2taZMkO\ny0qE1gqVAoGBAPs7x9JGgeY3xmSssoxoFNlzDk20tlVzZoHlS6qQMsnhqKfwrPKy\nbq657cNyLRxmrsjVBf0VaBteXSQWaUacvE3HX8pTKUP5xSYM/j0wkXUC/M9hneE0\nuLIXIbMGHW54gQNSaT5TvtOVDALVe5S2BzuB0xlp5C8tVX98JiuD60UXAoGBAM+6\ntlRVaKF158FAeYNXrUmoTq1Vb3wI0RC+rSIO227wxsRmD5AqbtTRlGjd7WoR0K9M\n9M8c7GwcwKl4jEWGruI0sdtr7WAVC5XRNlwXUH6N/OFhc/AaRtzf9SLdFZWt2sau\nl5VUB5J+pb6uoW/DNLux/5wl+XnYuKby5rxqq+lPAoGBANxwd8RpWVFHXyy223OX\nX7Ps4IAOMG6J80fGib3/CJFbD0FMTHQnXDazrYvwguSItJRDVh3ayp45DkC76WOr\n4w3cApDkpzCd1/6rJ+lI1Fh3ZpwQaxdPyz94THloxCpKUek4RmAJ20aLYR6bcvPp\nRC9SmoeSAkXi4UIbDOLhvW3BAoGAKkercrDLkgloeUoBMX139MT/9oGsJke5Hbph\njMwPV55EJpdLVaF9W22o0ktRVkR4ACYescUGTd7wS84QZtpJ4BqvlKR79RFzgTPK\n56WLKacGsGzgZx9CCxS+VTFAgm2XWNcSXT90JxoF7DCpBRFrO0S4bPTBuU4mDzzj\nP7hKczsCgYEA3U9VfkRgG/wii169GBS+lIOvRztVALzcZNmKBO0ZK4gUr4hEuvQ1\nlx5Y69KrTGuS5n8bGDJofqsTuEvBRMQ3OrdHutAaNpprQlBXUsmvoh8x3d63XxqP\nu8eoyvth5Myi0eFoWITs3g+aNMB3Gfk+9ha4zejtnLXifnFFXUssQUA=\n-----END RSA PRIVATE KEY-----\n\" | sudo tee /home/ubuntu/c1m/site.pem \u003e /dev/null\nsudo chmod 400 /home/ubuntu/c1m/site.pem\n\nNODE_NAME=\"$(hostname)\"\nlogger \"Node name: $NODE_NAME\"\n\nMETADATA_LOCAL_IP=`curl -H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/0/ip`\nlogger \"Local IP: $METADATA_LOCAL_IP\"\n\nlogger \"Configuring Consul\"\nCONSUL_DEFAULT_CONFIG=/etc/consul.d/default.json\nCONSUL_DATA_DIR=/opt/consul/data\n\nsudo mkdir -p $CONSUL_DATA_DIR\nsudo chmod 0755 $CONSUL_DATA_DIR\n\nsudo sed -i -- \"s/{{ data_dir }}/${CONSUL_DATA_DIR//\\//\\\\\\/}/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ datacenter }}/gce-us-central1/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ node_name }}/$NODE_NAME/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ local_ip }}/$METADATA_LOCAL_IP/g\" $CONSUL_DEFAULT_CONFIG\nsudo sed -i -- \"s/{{ log_level }}/INFO/g\" $CONSUL_DEFAULT_CONFIG\n\nlogger \"Configuring Consul Utility\"\nCONSUL_UTILITY_CONFIG=/etc/consul.d/utility.json\n\nsudo sed -i -- \"s/\\\"{{ tags }}\\\"/\\\"gce\\\", \\\"gce-us-central1\\\", \\\"us-central1-b\\\", \\\"n1-standard-1\\\"/g\" $CONSUL_UTILITY_CONFIG\n\nlogger \"Configuring Consul Redis and Statsite\"\nsudo sed -i -- \"s/{{ local_ip }}/$METADATA_LOCAL_IP/g\" /etc/consul.d/redis.json\nsudo sed -i -- \"s/{{ local_ip }}/$METADATA_LOCAL_IP/g\" /etc/consul.d/statsite.json\n\necho $(date '+%s') | sudo tee -a /etc/consul.d/configured \u003e /dev/null\nsudo service consul start || sudo service consul restart\n\nSTATSITE_DATA_DIR=/opt/statsite/data\n\nsudo mkdir -p $STATSITE_DATA_DIR\nsudo chmod 0755 $STATSITE_DATA_DIR\n\nsudo sed -i -- \"s/{{ data_dir }}/${STATSITE_DATA_DIR//\\//\\\\\\/}/g\" /etc/statsite.d/default.conf\n\necho $(date '+%s') | sudo tee -a /etc/statsite.d/configured \u003e /dev/null\nsudo service statsite start || sudo service statsite restart\n\nlogger \"Done\"\n",
                            "template": "/Users/Mike/code/hashistack-spark/terraform/_env/gce/.terraform/modules/26533dc3ab52a062473993ccdb926576/utility.sh.tpl",
                            "vars.%": "9",
                            "vars.consul_log_level": "INFO",
                            "vars.data_dir": "/opt",
                            "vars.datacenter": "gce-us-central1",
                            "vars.local_ip_url": "-H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/0/ip",
                            "vars.machine_type": "n1-standard-1",
                            "vars.private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAy9yS8XlI2r4ngK5xEQMds1uXijDWrnRiYtyTUSRxDqIFzjBS\nDzJzb4pExEnUPzjkqc9hNroefMBDbebSprFAKrAlZdnCcjlT2kpqAqKVSwFrYkf4\nojtdLadpi7WH8spEKVpFaPFjD/tvRD7so7ir4+50pujwonwyrMfqUwr8Yxv2bTVv\nkbu8AOx5Xk5hPgAJUVFdyrZ3cwP9sk/Zq1lf1k8MmuWdJLMDv5Cx+bbg3CsMn/dO\n8vxzHO1ej2X6SgONNODnQWAJD9J2KGDT0PnAw/S0Pnefv1BYM6hm6MelQHcfJw9p\n7PNxzOybk8oP65g+LK+jY9of0lxUVVIlg9lBGQIDAQABAoIBAQDJWSVFHM5pRjDL\n9v8zl0lJcehdk9kl20ula0iRdxW3Jy3mtXEHE4RSIVXELUtV2kJ2uZ3BqNgdzOOM\nc9OQ0jaXMvzs+MQFfzujuaW0zpH30AIYww7+ZPWl9tjXJUeN9FqYIVG20dtO2L7P\nv/qHxgj4CffrNt0dDuAaKSX2OT6IPzu4eFS2fZdZtJBDiGrG7ionFiZHHVbeSI5g\nTnhTsRJqz/+B8rrDQkrqn4FCwWvBT6FNQg5+bBvd6J3FukYBFrHUP1frb8Qz11oA\nkmiKKRkCBkwtH6Ni6Veo2/lJcsAfgel6uiOPVWtj2o2vt/E7VYq/l63Kl2taZMkO\ny0qE1gqVAoGBAPs7x9JGgeY3xmSssoxoFNlzDk20tlVzZoHlS6qQMsnhqKfwrPKy\nbq657cNyLRxmrsjVBf0VaBteXSQWaUacvE3HX8pTKUP5xSYM/j0wkXUC/M9hneE0\nuLIXIbMGHW54gQNSaT5TvtOVDALVe5S2BzuB0xlp5C8tVX98JiuD60UXAoGBAM+6\ntlRVaKF158FAeYNXrUmoTq1Vb3wI0RC+rSIO227wxsRmD5AqbtTRlGjd7WoR0K9M\n9M8c7GwcwKl4jEWGruI0sdtr7WAVC5XRNlwXUH6N/OFhc/AaRtzf9SLdFZWt2sau\nl5VUB5J+pb6uoW/DNLux/5wl+XnYuKby5rxqq+lPAoGBANxwd8RpWVFHXyy223OX\nX7Ps4IAOMG6J80fGib3/CJFbD0FMTHQnXDazrYvwguSItJRDVh3ayp45DkC76WOr\n4w3cApDkpzCd1/6rJ+lI1Fh3ZpwQaxdPyz94THloxCpKUek4RmAJ20aLYR6bcvPp\nRC9SmoeSAkXi4UIbDOLhvW3BAoGAKkercrDLkgloeUoBMX139MT/9oGsJke5Hbph\njMwPV55EJpdLVaF9W22o0ktRVkR4ACYescUGTd7wS84QZtpJ4BqvlKR79RFzgTPK\n56WLKacGsGzgZx9CCxS+VTFAgm2XWNcSXT90JxoF7DCpBRFrO0S4bPTBuU4mDzzj\nP7hKczsCgYEA3U9VfkRgG/wii169GBS+lIOvRztVALzcZNmKBO0ZK4gUr4hEuvQ1\nlx5Y69KrTGuS5n8bGDJofqsTuEvBRMQ3OrdHutAaNpprQlBXUsmvoh8x3d63XxqP\nu8eoyvth5Myi0eFoWITs3g+aNMB3Gfk+9ha4zejtnLXifnFFXUssQUA=\n-----END RSA PRIVATE KEY-----\n",
                            "vars.provider": "gce",
                            "vars.region": "gce-us-central1",
                            "vars.zone": "us-central1-b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "consul_servers",
                "consul_cluster_join_template"
            ],
            "outputs": {
                "script": {
                    "sensitive": false,
                    "type": "string",
                    "value": "#!/bin/bash\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT join.sh: $1\"\n  echo \"$DT join.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nlogger \"running: consul join 10.140.0.4 10.140.0.2 10.140.0.3\"\n\nset +e        # Don't exit on errors while we wait for consul to start\nconsul join 10.140.0.4 10.140.0.2 10.140.0.3\nretval=$?\nSLEEPTIME=1\nwhile [ $retval -ne 0 ]; do\n    if [ $SLEEPTIME -gt 15 ]; then\n      logger \"ERROR: CONSUL SETUP NOT COMPLETE! Couldn't execute `join` Manual intervention required.\"\n      exit $retval\n    else\n      logger \"Consul join failed, retrying in $SLEEPTIME seconds\"\n      sleep $SLEEPTIME\n      SLEEPTIME=$((SLEEPTIME + 1))\n      consul join 10.140.0.4 10.140.0.2 10.140.0.3\n      retval=$?\n    fi\ndone\nset -e\n\necho \"Join succeeded, waiting for peers...\"\n\nSLEEPTIME=1\nCONSUL_PEERS=`consul info | grep num_peers | cut -c 14-`\nwhile [ $CONSUL_PEERS -lt 2 ]\ndo\n  if [ $SLEEPTIME -gt 15 ]; then\n    logger \"ERROR: CONSUL SETUP NOT COMPLETE! Peers didn't join. Manual intervention required.\"\n    exit 2\n  else\n    logger \"Waiting for optimum quorum size, currently: $CONSUL_PEERS, waiting $SLEEPTIME seconds\"\n    sleep $SLEEPTIME\n    SLEEPTIME=$((SLEEPTIME + 1))\n    CONSUL_PEERS=`consul info | grep num_peers | cut -c 14-`\n  fi\ndone\n\nsleep 15 # Wait for Consul service to join and elect leader\n\nlogger \"End script\"\n"
                }
            },
            "resources": {
                "template_file.join": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "7f8b12756e86e95a99bd8eddecdabdc5371e7034389d7284230a6e16e75ea25e",
                        "attributes": {
                            "id": "7f8b12756e86e95a99bd8eddecdabdc5371e7034389d7284230a6e16e75ea25e",
                            "rendered": "#!/bin/bash\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT join.sh: $1\"\n  echo \"$DT join.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nlogger \"running: consul join 10.140.0.4 10.140.0.2 10.140.0.3\"\n\nset +e        # Don't exit on errors while we wait for consul to start\nconsul join 10.140.0.4 10.140.0.2 10.140.0.3\nretval=$?\nSLEEPTIME=1\nwhile [ $retval -ne 0 ]; do\n    if [ $SLEEPTIME -gt 15 ]; then\n      logger \"ERROR: CONSUL SETUP NOT COMPLETE! Couldn't execute `join` Manual intervention required.\"\n      exit $retval\n    else\n      logger \"Consul join failed, retrying in $SLEEPTIME seconds\"\n      sleep $SLEEPTIME\n      SLEEPTIME=$((SLEEPTIME + 1))\n      consul join 10.140.0.4 10.140.0.2 10.140.0.3\n      retval=$?\n    fi\ndone\nset -e\n\necho \"Join succeeded, waiting for peers...\"\n\nSLEEPTIME=1\nCONSUL_PEERS=`consul info | grep num_peers | cut -c 14-`\nwhile [ $CONSUL_PEERS -lt 2 ]\ndo\n  if [ $SLEEPTIME -gt 15 ]; then\n    logger \"ERROR: CONSUL SETUP NOT COMPLETE! Peers didn't join. Manual intervention required.\"\n    exit 2\n  else\n    logger \"Waiting for optimum quorum size, currently: $CONSUL_PEERS, waiting $SLEEPTIME seconds\"\n    sleep $SLEEPTIME\n    SLEEPTIME=$((SLEEPTIME + 1))\n    CONSUL_PEERS=`consul info | grep num_peers | cut -c 14-`\n  fi\ndone\n\nsleep 15 # Wait for Consul service to join and elect leader\n\nlogger \"End script\"\n",
                            "template": "#!/bin/bash\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT join.sh: $1\"\n  echo \"$DT join.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nlogger \"running: consul join ${consul_servers}\"\n\nset +e        # Don't exit on errors while we wait for consul to start\nconsul join ${consul_servers}\nretval=$?\nSLEEPTIME=1\nwhile [ $retval -ne 0 ]; do\n    if [ $SLEEPTIME -gt 15 ]; then\n      logger \"ERROR: CONSUL SETUP NOT COMPLETE! Couldn't execute `join` Manual intervention required.\"\n      exit $retval\n    else\n      logger \"Consul join failed, retrying in $SLEEPTIME seconds\"\n      sleep $SLEEPTIME\n      SLEEPTIME=$((SLEEPTIME + 1))\n      consul join ${consul_servers}\n      retval=$?\n    fi\ndone\nset -e\n\necho \"Join succeeded, waiting for peers...\"\n\nSLEEPTIME=1\nCONSUL_PEERS=`consul info | grep num_peers | cut -c 14-`\nwhile [ $CONSUL_PEERS -lt 2 ]\ndo\n  if [ $SLEEPTIME -gt 15 ]; then\n    logger \"ERROR: CONSUL SETUP NOT COMPLETE! Peers didn't join. Manual intervention required.\"\n    exit 2\n  else\n    logger \"Waiting for optimum quorum size, currently: $CONSUL_PEERS, waiting $SLEEPTIME seconds\"\n    sleep $SLEEPTIME\n    SLEEPTIME=$((SLEEPTIME + 1))\n    CONSUL_PEERS=`consul info | grep num_peers | cut -c 14-`\n  fi\ndone\n\nsleep 15 # Wait for Consul service to join and elect leader\n\nlogger \"End script\"\n",
                            "vars.%": "3",
                            "vars.consul_join_name": "consul-server?passing",
                            "vars.consul_servers": "10.140.0.4 10.140.0.2 10.140.0.3",
                            "vars.service": "consul_join"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "consul_servers",
                "consul_server_template"
            ],
            "outputs": {
                "user_data": {
                    "sensitive": false,
                    "type": "string",
                    "value": "/Users/Mike/code/hashistack-spark/terraform/_env/gce/.terraform/modules/673145f52dd3c28654fc94fe13285bb8/consul_server.sh.tpl"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "consul_servers",
                "mount_ssd_template"
            ],
            "outputs": {
                "script": {
                    "sensitive": false,
                    "type": "string",
                    "value": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT mount_ssd.sh: $1\"\n  echo \"$DT mount_ssd.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nlogger \"Mount local SSD\"\nsudo mkdir -p /mnt/ssd0\nsudo mkfs.ext4 -F /dev/disk/by-id/google-local-ssd-0\nsudo mount -o discard,defaults /dev/disk/by-id/google-local-ssd-0 /mnt/ssd0\nsudo chmod a+w /mnt/ssd0\n\nlogger \"Optimize local SSD\"\necho deadline | sudo tee -a /sys/block/sdb/queue/scheduler\necho 1 | sudo tee -a /sys/block/sdb/queue/iosched/fifo_batch\necho \"tmpfs /tmp tmpfs defaults,noatime,mode=1777 0 0\" | sudo tee -a /etc/fstab\n\nif [ ! -f /home/ubuntu/c1m/reboot ]; then\n  logger \"Local SSD reboot\"\n  echo $(date '+%s') | sudo tee -a /home/ubuntu/c1m/reboot \u003e /dev/null\n  sudo reboot\n  exit 0\nfi\n\nlogger \"Done\"\n\nexit 0\n"
                }
            },
            "resources": {
                "template_file.mount_ssd": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "89dd7fe479675f6894a2c9e4359fcdeb93d7d9f165eee525b1f7363080ed8bfe",
                        "attributes": {
                            "id": "89dd7fe479675f6894a2c9e4359fcdeb93d7d9f165eee525b1f7363080ed8bfe",
                            "rendered": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT mount_ssd.sh: $1\"\n  echo \"$DT mount_ssd.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nlogger \"Mount local SSD\"\nsudo mkdir -p /mnt/ssd0\nsudo mkfs.ext4 -F /dev/disk/by-id/google-local-ssd-0\nsudo mount -o discard,defaults /dev/disk/by-id/google-local-ssd-0 /mnt/ssd0\nsudo chmod a+w /mnt/ssd0\n\nlogger \"Optimize local SSD\"\necho deadline | sudo tee -a /sys/block/sdb/queue/scheduler\necho 1 | sudo tee -a /sys/block/sdb/queue/iosched/fifo_batch\necho \"tmpfs /tmp tmpfs defaults,noatime,mode=1777 0 0\" | sudo tee -a /etc/fstab\n\nif [ ! -f /home/ubuntu/c1m/reboot ]; then\n  logger \"Local SSD reboot\"\n  echo $(date '+%s') | sudo tee -a /home/ubuntu/c1m/reboot \u003e /dev/null\n  sudo reboot\n  exit 0\nfi\n\nlogger \"Done\"\n\nexit 0\n",
                            "template": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT mount_ssd.sh: $1\"\n  echo \"$DT mount_ssd.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nlogger \"Mount local SSD\"\nsudo mkdir -p ${mount_dir}\nsudo mkfs.ext4 -F /dev/disk/by-id/${local_ssd_name}\nsudo mount -o discard,defaults /dev/disk/by-id/${local_ssd_name} ${mount_dir}\nsudo chmod a+w ${mount_dir}\n\nlogger \"Optimize local SSD\"\necho deadline | sudo tee -a /sys/block/sdb/queue/scheduler\necho 1 | sudo tee -a /sys/block/sdb/queue/iosched/fifo_batch\necho \"tmpfs /tmp tmpfs defaults,noatime,mode=1777 0 0\" | sudo tee -a /etc/fstab\n\nif [ ! -f /home/ubuntu/c1m/reboot ]; then\n  logger \"Local SSD reboot\"\n  echo $(date '+%s') | sudo tee -a /home/ubuntu/c1m/reboot \u003e /dev/null\n  sudo reboot\n  exit 0\nfi\n\nlogger \"Done\"\n\nexit 0\n",
                            "vars.%": "2",
                            "vars.local_ssd_name": "google-local-ssd-0",
                            "vars.mount_dir": "/mnt/ssd0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "consul_servers",
                "nodejs_pq_template"
            ],
            "outputs": {
                "script": {
                    "sensitive": false,
                    "type": "string",
                    "value": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT pq.sh: $1\"\n  echo \"$DT pq.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nservers() {\n  PASSING=$(curl -s \"http://127.0.0.1:8500/v1/health/service/consul-server?passing\")\n\n  # Check if valid json is returned, otherwise jq command fails\n  if [[ \"$PASSING\" == [{* ]]; then\n    echo $(echo $PASSING | jq -r '.[].Node.Address' | tr '\\n' ' ')\n  fi\n}\n\nsleep 15 # Wait for Consul service to fully boot\nCONSUL_SERVERS=$(servers)\nlogger \"Initial Consul servers: $CONSUL_SERVERS\"\nCONSUL_SERVER_LEN=$(echo $CONSUL_SERVERS | wc -w)\nlogger \"Initial Consul server length: $CONSUL_SERVER_LEN\"\nSLEEPTIME=1\n\nwhile [ $CONSUL_SERVER_LEN -lt 2 ]\ndo\n  if [ $SLEEPTIME -gt 15 ]; then\n    logger \"ERROR: CONSUL SETUP NOT COMPLETE! Manual intervention required.\"\n    exit 2\n  else\n    logger \"Waiting for optimum quorum size, currently: $CONSUL_SERVER_LEN, waiting $SLEEPTIME seconds\"\n    CONSUL_SERVERS=$(servers)\n    logger \"Consul servers: $CONSUL_SERVERS\"\n    CONSUL_SERVER_LEN=$(echo $CONSUL_SERVERS | wc -w)\n    logger \"Consul server length: $CONSUL_SERVER_LEN\"\n    sleep $SLEEPTIME\n    SLEEPTIME=$((SLEEPTIME + 1))\n  fi\ndone\n\nCONSUL_ADDR=http://127.0.0.1:8500\n\nlogger \"Temporarily registering nodejs service for Prepared Query\"\nlogger \"$(\n  curl \\\n    -H \"Content-Type: application/json\" \\\n    -LX PUT \\\n    -d '{ \"Name\": \"nodejs\" }' \\\n    $CONSUL_ADDR/v1/agent/service/register\n)\"\n\nlogger \"Registering nodejs Prepared Query\"\nlogger \"$(\n  curl \\\n    -H \"Content-Type: application/json\" \\\n    -LX POST \\\n    -d \\\n'{\n  \"Name\": \"nodejs\",\n  \"Service\": {\n    \"Service\": \"nodejs\",\n    \"Failover\": {\n      \"NearestN\": 3\n    },\n    \"OnlyPassing\": true,\n    \"Tags\": [\"global\"]\n  },\n  \"DNS\": {\n    \"TTL\": \"10s\"\n  }\n}' $CONSUL_ADDR/v1/query\n)\"\n\nlogger \"Deregistering nodejs service\"\nlogger \"$(\n  curl $CONSUL_ADDR/v1/agent/service/deregister/nodejs\n)\"\n\nsudo service consul start || sudo service consul restart\n\nlogger \"Done\"\n"
                }
            },
            "resources": {
                "template_file.pq": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "c0f170b3901b734c39f55d2dc1d5af64448580ec56bde34afed6401ac874c63a",
                        "attributes": {
                            "id": "c0f170b3901b734c39f55d2dc1d5af64448580ec56bde34afed6401ac874c63a",
                            "rendered": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT pq.sh: $1\"\n  echo \"$DT pq.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nservers() {\n  PASSING=$(curl -s \"http://127.0.0.1:8500/v1/health/service/consul-server?passing\")\n\n  # Check if valid json is returned, otherwise jq command fails\n  if [[ \"$PASSING\" == [{* ]]; then\n    echo $(echo $PASSING | jq -r '.[].Node.Address' | tr '\\n' ' ')\n  fi\n}\n\nsleep 15 # Wait for Consul service to fully boot\nCONSUL_SERVERS=$(servers)\nlogger \"Initial Consul servers: $CONSUL_SERVERS\"\nCONSUL_SERVER_LEN=$(echo $CONSUL_SERVERS | wc -w)\nlogger \"Initial Consul server length: $CONSUL_SERVER_LEN\"\nSLEEPTIME=1\n\nwhile [ $CONSUL_SERVER_LEN -lt 2 ]\ndo\n  if [ $SLEEPTIME -gt 15 ]; then\n    logger \"ERROR: CONSUL SETUP NOT COMPLETE! Manual intervention required.\"\n    exit 2\n  else\n    logger \"Waiting for optimum quorum size, currently: $CONSUL_SERVER_LEN, waiting $SLEEPTIME seconds\"\n    CONSUL_SERVERS=$(servers)\n    logger \"Consul servers: $CONSUL_SERVERS\"\n    CONSUL_SERVER_LEN=$(echo $CONSUL_SERVERS | wc -w)\n    logger \"Consul server length: $CONSUL_SERVER_LEN\"\n    sleep $SLEEPTIME\n    SLEEPTIME=$((SLEEPTIME + 1))\n  fi\ndone\n\nCONSUL_ADDR=http://127.0.0.1:8500\n\nlogger \"Temporarily registering nodejs service for Prepared Query\"\nlogger \"$(\n  curl \\\n    -H \"Content-Type: application/json\" \\\n    -LX PUT \\\n    -d '{ \"Name\": \"nodejs\" }' \\\n    $CONSUL_ADDR/v1/agent/service/register\n)\"\n\nlogger \"Registering nodejs Prepared Query\"\nlogger \"$(\n  curl \\\n    -H \"Content-Type: application/json\" \\\n    -LX POST \\\n    -d \\\n'{\n  \"Name\": \"nodejs\",\n  \"Service\": {\n    \"Service\": \"nodejs\",\n    \"Failover\": {\n      \"NearestN\": 3\n    },\n    \"OnlyPassing\": true,\n    \"Tags\": [\"global\"]\n  },\n  \"DNS\": {\n    \"TTL\": \"10s\"\n  }\n}' $CONSUL_ADDR/v1/query\n)\"\n\nlogger \"Deregistering nodejs service\"\nlogger \"$(\n  curl $CONSUL_ADDR/v1/agent/service/deregister/nodejs\n)\"\n\nsudo service consul start || sudo service consul restart\n\nlogger \"Done\"\n",
                            "template": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT pq.sh: $1\"\n  echo \"$DT pq.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nservers() {\n  PASSING=$(curl -s \"http://127.0.0.1:8500/v1/health/service/${consul_join_name}\")\n\n  # Check if valid json is returned, otherwise jq command fails\n  if [[ \"$PASSING\" == [{* ]]; then\n    echo $(echo $PASSING | jq -r '.[].Node.Address' | tr '\\n' ' ')\n  fi\n}\n\nsleep 15 # Wait for Consul service to fully boot\nCONSUL_SERVERS=$(servers)\nlogger \"Initial Consul servers: $CONSUL_SERVERS\"\nCONSUL_SERVER_LEN=$(echo $CONSUL_SERVERS | wc -w)\nlogger \"Initial Consul server length: $CONSUL_SERVER_LEN\"\nSLEEPTIME=1\n\nwhile [ $CONSUL_SERVER_LEN -lt 2 ]\ndo\n  if [ $SLEEPTIME -gt 15 ]; then\n    logger \"ERROR: CONSUL SETUP NOT COMPLETE! Manual intervention required.\"\n    exit 2\n  else\n    logger \"Waiting for optimum quorum size, currently: $CONSUL_SERVER_LEN, waiting $SLEEPTIME seconds\"\n    CONSUL_SERVERS=$(servers)\n    logger \"Consul servers: $CONSUL_SERVERS\"\n    CONSUL_SERVER_LEN=$(echo $CONSUL_SERVERS | wc -w)\n    logger \"Consul server length: $CONSUL_SERVER_LEN\"\n    sleep $SLEEPTIME\n    SLEEPTIME=$((SLEEPTIME + 1))\n  fi\ndone\n\nCONSUL_ADDR=http://127.0.0.1:8500\n\nlogger \"Temporarily registering ${service} service for Prepared Query\"\nlogger \"$(\n  curl \\\n    -H \"Content-Type: application/json\" \\\n    -LX PUT \\\n    -d '{ \"Name\": \"${service}\" }' \\\n    $CONSUL_ADDR/v1/agent/service/register\n)\"\n\nlogger \"Registering ${service} Prepared Query\"\nlogger \"$(\n  curl \\\n    -H \"Content-Type: application/json\" \\\n    -LX POST \\\n    -d \\\n'{\n  \"Name\": \"${service}\",\n  \"Service\": {\n    \"Service\": \"${service}\",\n    \"Failover\": {\n      \"NearestN\": 3\n    },\n    \"OnlyPassing\": true,\n    \"Tags\": [\"global\"]\n  },\n  \"DNS\": {\n    \"TTL\": \"10s\"\n  }\n}' $CONSUL_ADDR/v1/query\n)\"\n\nlogger \"Deregistering ${service} service\"\nlogger \"$(\n  curl $CONSUL_ADDR/v1/agent/service/deregister/${service}\n)\"\n\nsudo service consul start || sudo service consul restart\n\nlogger \"Done\"\n",
                            "vars.%": "2",
                            "vars.consul_join_name": "consul-server?passing",
                            "vars.service": "nodejs"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "consul_servers",
                "redis_pq_template"
            ],
            "outputs": {
                "script": {
                    "sensitive": false,
                    "type": "string",
                    "value": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT pq.sh: $1\"\n  echo \"$DT pq.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nservers() {\n  PASSING=$(curl -s \"http://127.0.0.1:8500/v1/health/service/consul-server?passing\")\n\n  # Check if valid json is returned, otherwise jq command fails\n  if [[ \"$PASSING\" == [{* ]]; then\n    echo $(echo $PASSING | jq -r '.[].Node.Address' | tr '\\n' ' ')\n  fi\n}\n\nsleep 15 # Wait for Consul service to fully boot\nCONSUL_SERVERS=$(servers)\nlogger \"Initial Consul servers: $CONSUL_SERVERS\"\nCONSUL_SERVER_LEN=$(echo $CONSUL_SERVERS | wc -w)\nlogger \"Initial Consul server length: $CONSUL_SERVER_LEN\"\nSLEEPTIME=1\n\nwhile [ $CONSUL_SERVER_LEN -lt 2 ]\ndo\n  if [ $SLEEPTIME -gt 15 ]; then\n    logger \"ERROR: CONSUL SETUP NOT COMPLETE! Manual intervention required.\"\n    exit 2\n  else\n    logger \"Waiting for optimum quorum size, currently: $CONSUL_SERVER_LEN, waiting $SLEEPTIME seconds\"\n    CONSUL_SERVERS=$(servers)\n    logger \"Consul servers: $CONSUL_SERVERS\"\n    CONSUL_SERVER_LEN=$(echo $CONSUL_SERVERS | wc -w)\n    logger \"Consul server length: $CONSUL_SERVER_LEN\"\n    sleep $SLEEPTIME\n    SLEEPTIME=$((SLEEPTIME + 1))\n  fi\ndone\n\nCONSUL_ADDR=http://127.0.0.1:8500\n\nlogger \"Temporarily registering redis service for Prepared Query\"\nlogger \"$(\n  curl \\\n    -H \"Content-Type: application/json\" \\\n    -LX PUT \\\n    -d '{ \"Name\": \"redis\" }' \\\n    $CONSUL_ADDR/v1/agent/service/register\n)\"\n\nlogger \"Registering redis Prepared Query\"\nlogger \"$(\n  curl \\\n    -H \"Content-Type: application/json\" \\\n    -LX POST \\\n    -d \\\n'{\n  \"Name\": \"redis\",\n  \"Service\": {\n    \"Service\": \"redis\",\n    \"Failover\": {\n      \"NearestN\": 3\n    },\n    \"OnlyPassing\": true,\n    \"Tags\": [\"global\"]\n  },\n  \"DNS\": {\n    \"TTL\": \"10s\"\n  }\n}' $CONSUL_ADDR/v1/query\n)\"\n\nlogger \"Deregistering redis service\"\nlogger \"$(\n  curl $CONSUL_ADDR/v1/agent/service/deregister/redis\n)\"\n\nsudo service consul start || sudo service consul restart\n\nlogger \"Done\"\n"
                }
            },
            "resources": {
                "template_file.pq": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "410ee832f8697eb522807de471928fd77375b36c8237a461feb117e59df94fe0",
                        "attributes": {
                            "id": "410ee832f8697eb522807de471928fd77375b36c8237a461feb117e59df94fe0",
                            "rendered": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT pq.sh: $1\"\n  echo \"$DT pq.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nservers() {\n  PASSING=$(curl -s \"http://127.0.0.1:8500/v1/health/service/consul-server?passing\")\n\n  # Check if valid json is returned, otherwise jq command fails\n  if [[ \"$PASSING\" == [{* ]]; then\n    echo $(echo $PASSING | jq -r '.[].Node.Address' | tr '\\n' ' ')\n  fi\n}\n\nsleep 15 # Wait for Consul service to fully boot\nCONSUL_SERVERS=$(servers)\nlogger \"Initial Consul servers: $CONSUL_SERVERS\"\nCONSUL_SERVER_LEN=$(echo $CONSUL_SERVERS | wc -w)\nlogger \"Initial Consul server length: $CONSUL_SERVER_LEN\"\nSLEEPTIME=1\n\nwhile [ $CONSUL_SERVER_LEN -lt 2 ]\ndo\n  if [ $SLEEPTIME -gt 15 ]; then\n    logger \"ERROR: CONSUL SETUP NOT COMPLETE! Manual intervention required.\"\n    exit 2\n  else\n    logger \"Waiting for optimum quorum size, currently: $CONSUL_SERVER_LEN, waiting $SLEEPTIME seconds\"\n    CONSUL_SERVERS=$(servers)\n    logger \"Consul servers: $CONSUL_SERVERS\"\n    CONSUL_SERVER_LEN=$(echo $CONSUL_SERVERS | wc -w)\n    logger \"Consul server length: $CONSUL_SERVER_LEN\"\n    sleep $SLEEPTIME\n    SLEEPTIME=$((SLEEPTIME + 1))\n  fi\ndone\n\nCONSUL_ADDR=http://127.0.0.1:8500\n\nlogger \"Temporarily registering redis service for Prepared Query\"\nlogger \"$(\n  curl \\\n    -H \"Content-Type: application/json\" \\\n    -LX PUT \\\n    -d '{ \"Name\": \"redis\" }' \\\n    $CONSUL_ADDR/v1/agent/service/register\n)\"\n\nlogger \"Registering redis Prepared Query\"\nlogger \"$(\n  curl \\\n    -H \"Content-Type: application/json\" \\\n    -LX POST \\\n    -d \\\n'{\n  \"Name\": \"redis\",\n  \"Service\": {\n    \"Service\": \"redis\",\n    \"Failover\": {\n      \"NearestN\": 3\n    },\n    \"OnlyPassing\": true,\n    \"Tags\": [\"global\"]\n  },\n  \"DNS\": {\n    \"TTL\": \"10s\"\n  }\n}' $CONSUL_ADDR/v1/query\n)\"\n\nlogger \"Deregistering redis service\"\nlogger \"$(\n  curl $CONSUL_ADDR/v1/agent/service/deregister/redis\n)\"\n\nsudo service consul start || sudo service consul restart\n\nlogger \"Done\"\n",
                            "template": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT pq.sh: $1\"\n  echo \"$DT pq.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nservers() {\n  PASSING=$(curl -s \"http://127.0.0.1:8500/v1/health/service/${consul_join_name}\")\n\n  # Check if valid json is returned, otherwise jq command fails\n  if [[ \"$PASSING\" == [{* ]]; then\n    echo $(echo $PASSING | jq -r '.[].Node.Address' | tr '\\n' ' ')\n  fi\n}\n\nsleep 15 # Wait for Consul service to fully boot\nCONSUL_SERVERS=$(servers)\nlogger \"Initial Consul servers: $CONSUL_SERVERS\"\nCONSUL_SERVER_LEN=$(echo $CONSUL_SERVERS | wc -w)\nlogger \"Initial Consul server length: $CONSUL_SERVER_LEN\"\nSLEEPTIME=1\n\nwhile [ $CONSUL_SERVER_LEN -lt 2 ]\ndo\n  if [ $SLEEPTIME -gt 15 ]; then\n    logger \"ERROR: CONSUL SETUP NOT COMPLETE! Manual intervention required.\"\n    exit 2\n  else\n    logger \"Waiting for optimum quorum size, currently: $CONSUL_SERVER_LEN, waiting $SLEEPTIME seconds\"\n    CONSUL_SERVERS=$(servers)\n    logger \"Consul servers: $CONSUL_SERVERS\"\n    CONSUL_SERVER_LEN=$(echo $CONSUL_SERVERS | wc -w)\n    logger \"Consul server length: $CONSUL_SERVER_LEN\"\n    sleep $SLEEPTIME\n    SLEEPTIME=$((SLEEPTIME + 1))\n  fi\ndone\n\nCONSUL_ADDR=http://127.0.0.1:8500\n\nlogger \"Temporarily registering ${service} service for Prepared Query\"\nlogger \"$(\n  curl \\\n    -H \"Content-Type: application/json\" \\\n    -LX PUT \\\n    -d '{ \"Name\": \"${service}\" }' \\\n    $CONSUL_ADDR/v1/agent/service/register\n)\"\n\nlogger \"Registering ${service} Prepared Query\"\nlogger \"$(\n  curl \\\n    -H \"Content-Type: application/json\" \\\n    -LX POST \\\n    -d \\\n'{\n  \"Name\": \"${service}\",\n  \"Service\": {\n    \"Service\": \"${service}\",\n    \"Failover\": {\n      \"NearestN\": 3\n    },\n    \"OnlyPassing\": true,\n    \"Tags\": [\"global\"]\n  },\n  \"DNS\": {\n    \"TTL\": \"10s\"\n  }\n}' $CONSUL_ADDR/v1/query\n)\"\n\nlogger \"Deregistering ${service} service\"\nlogger \"$(\n  curl $CONSUL_ADDR/v1/agent/service/deregister/${service}\n)\"\n\nsudo service consul start || sudo service consul restart\n\nlogger \"Done\"\n",
                            "vars.%": "2",
                            "vars.consul_join_name": "consul-server?passing",
                            "vars.service": "redis"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "nomad_clients_igm",
                "mount_ssd_template"
            ],
            "outputs": {
                "script": {
                    "sensitive": false,
                    "type": "string",
                    "value": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT mount_ssd.sh: $1\"\n  echo \"$DT mount_ssd.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nlogger \"Mount local SSD\"\nsudo mkdir -p /mnt/ssd0\nsudo mkfs.ext4 -F /dev/disk/by-id/google-local-ssd-0\nsudo mount -o discard,defaults /dev/disk/by-id/google-local-ssd-0 /mnt/ssd0\nsudo chmod a+w /mnt/ssd0\n\nlogger \"Optimize local SSD\"\necho deadline | sudo tee -a /sys/block/sdb/queue/scheduler\necho 1 | sudo tee -a /sys/block/sdb/queue/iosched/fifo_batch\necho \"tmpfs /tmp tmpfs defaults,noatime,mode=1777 0 0\" | sudo tee -a /etc/fstab\n\nif [ ! -f /home/ubuntu/c1m/reboot ]; then\n  logger \"Local SSD reboot\"\n  echo $(date '+%s') | sudo tee -a /home/ubuntu/c1m/reboot \u003e /dev/null\n  sudo reboot\n  exit 0\nfi\n\nlogger \"Done\"\n\nexit 0\n"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "nomad_clients_igm",
                "nomad_client_template"
            ],
            "outputs": {
                "user_data": {
                    "sensitive": false,
                    "type": "string",
                    "value": "/Users/Mike/code/hashistack-spark/terraform/_env/gce/.terraform/modules/3b0d7dc6f25e5f9cfe7564c4c8690cd0/nomad_client.sh.tpl"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "nomad_servers",
                "mount_ssd_template"
            ],
            "outputs": {
                "script": {
                    "sensitive": false,
                    "type": "string",
                    "value": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT mount_ssd.sh: $1\"\n  echo \"$DT mount_ssd.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nlogger \"Mount local SSD\"\nsudo mkdir -p /mnt/ssd0\nsudo mkfs.ext4 -F /dev/disk/by-id/google-local-ssd-0\nsudo mount -o discard,defaults /dev/disk/by-id/google-local-ssd-0 /mnt/ssd0\nsudo chmod a+w /mnt/ssd0\n\nlogger \"Optimize local SSD\"\necho deadline | sudo tee -a /sys/block/sdb/queue/scheduler\necho 1 | sudo tee -a /sys/block/sdb/queue/iosched/fifo_batch\necho \"tmpfs /tmp tmpfs defaults,noatime,mode=1777 0 0\" | sudo tee -a /etc/fstab\n\nif [ ! -f /home/ubuntu/c1m/reboot ]; then\n  logger \"Local SSD reboot\"\n  echo $(date '+%s') | sudo tee -a /home/ubuntu/c1m/reboot \u003e /dev/null\n  sudo reboot\n  exit 0\nfi\n\nlogger \"Done\"\n\nexit 0\n"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "nomad_servers",
                "nomad_jobs"
            ],
            "outputs": {
                "cmd": {
                    "sensitive": false,
                    "type": "string",
                    "value": "echo \"Creating job files\"\n\necho \"Creating C1M classlogger_1 job files\"\ncat \u003e /opt/nomad/jobs/classlogger_1_docker.nomad \u003c\u003cEOF\njob \"classlogger-docker\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n}\n\nEOF\n\ncat \u003e /opt/nomad/jobs/classlogger_1_consul_docker.nomad \u003c\u003cEOF\njob \"classlogger-consul-docker\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n}\n\nEOF\n\ncat \u003e /opt/nomad/jobs/classlogger_1_raw_exec.nomad \u003c\u003cEOF\njob \"classlogger-raw-exec\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n}\n\nEOF\n\ncat \u003e /opt/nomad/jobs/classlogger_1_consul_raw_exec.nomad \u003c\u003cEOF\njob \"classlogger-consul-raw-exec\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n}\n\nEOF\n\necho \"Creating C1M classlogger_20 job files\"\ncat \u003e /opt/nomad/jobs/classlogger_20_docker.nomad \u003c\u003cEOF\njob \"classlogger-docker\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n}\n\nEOF\n\ncat \u003e /opt/nomad/jobs/classlogger_20_consul_docker.nomad \u003c\u003cEOF\njob \"classlogger-consul-docker\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n}\n\nEOF\n\ncat \u003e /opt/nomad/jobs/classlogger_20_raw_exec.nomad \u003c\u003cEOF\njob \"classlogger-raw-exec\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n}\n\nEOF\n\ncat \u003e /opt/nomad/jobs/classlogger_20_consul_raw_exec.nomad \u003c\u003cEOF\njob \"classlogger-consul-raw-exec\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n}\n\nEOF\n\necho \"Creating C1M classlogger_200 job files\"\ncat \u003e /opt/nomad/jobs/classlogger_200_docker.nomad \u003c\u003cEOF\njob \"classlogger-docker\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n}\n\nEOF\n\ncat \u003e /opt/nomad/jobs/classlogger_200_consul_docker.nomad \u003c\u003cEOF\njob \"classlogger-consul-docker\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n}\n\nEOF\n\ncat \u003e /opt/nomad/jobs/classlogger_200_raw_exec.nomad \u003c\u003cEOF\njob \"classlogger-raw-exec\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n}\n\nEOF\n\ncat \u003e /opt/nomad/jobs/classlogger_200_consul_raw_exec.nomad \u003c\u003cEOF\njob \"classlogger-consul-raw-exec\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n}\n\nEOF\n\necho \"Creating C1M classlogger_2000 job files\"\ncat \u003e /opt/nomad/jobs/classlogger_2000_docker.nomad \u003c\u003cEOF\njob \"classlogger-docker\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n}\n\nEOF\n\ncat \u003e /opt/nomad/jobs/classlogger_2000_consul_docker.nomad \u003c\u003cEOF\njob \"classlogger-consul-docker\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n}\n\nEOF\n\ncat \u003e /opt/nomad/jobs/classlogger_2000_raw_exec.nomad \u003c\u003cEOF\njob \"classlogger-raw-exec\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n}\n\nEOF\n\ncat \u003e /opt/nomad/jobs/classlogger_2000_consul_raw_exec.nomad \u003c\u003cEOF\njob \"classlogger-consul-raw-exec\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n}\n\nEOF\n\necho \"Creating web example job files\"\ncat \u003e /opt/nomad/jobs/redis.nomad \u003c\u003cEOF\njob \"redis\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  update {\n    stagger      = \"10s\"\n    max_parallel = 1\n  }\n\n  group \"redis\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.datacenter}\"\n      value     = \"gce-us-central1\"\n    }\n\n    restart {\n      mode     = \"delay\"\n      interval = \"5m\"\n      attempts = 10\n      delay    = \"25s\"\n    }\n\n    task \"redis\" {\n      driver = \"docker\"\n\n      config {\n        image = \"hashidemo/redis:latest\"\n\n        port_map {\n          db = 6379\n        }\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n\n        network {\n          mbits = 1\n\n          port \"db\" {\n            static = 6379\n          }\n        }\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      service {\n        name = \"redis\"\n        tags = [\"global\", \"gce-us-central1\"]\n        port = \"db\"\n\n        check {\n          name     = \"redis alive\"\n          type     = \"tcp\"\n          interval = \"10s\"\n          timeout  = \"2s\"\n        }\n      }\n    }\n  }\n}\n\nEOF\n\ncat \u003e /opt/nomad/jobs/web.nomad \u003c\u003cEOF\njob \"web\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  update {\n    stagger      = \"10s\"\n    max_parallel = 1\n  }\n\n  group \"nginx\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.datacenter}\"\n      value     = \"gce-us-central1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"nginx\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashidemo/nginx:latest\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n\n        network {\n          mbits = 1\n\n          port \"http\" {\n            static = 80\n          }\n        }\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      service {\n        name = \"nginx\"\n        tags = [\"global\", \"gce-us-central1\"]\n        port = \"http\"\n\n        check {\n          name     = \"nginx alive\"\n          type     = \"tcp\"\n          interval = \"10s\"\n          timeout  = \"2s\"\n        }\n      }\n    }\n  }\n\n  group \"nodejs\" {\n    count = hashidemo/nodejs:latest\n\n    constraint {\n      attribute = \"\\${node.datacenter}\"\n      value     = \"gce-us-central1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"nodejs\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashidemo/nodejs-dc-failover:latest\"\n        image        = \"hashidemo/nodejs:latest\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n\n        network {\n          mbits = 1\n\n          # Request for a dynamic port\n          port \"http\" {\n          }\n        }\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.query.consul\"\n        REDIS_PORT = \"6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"nodejs\"\n        tags = [\"global\", \"gce-us-central1\"]\n        port = \"http\"\n\n        check {\n          name     = \"nodejs alive\"\n          type     = \"tcp\"\n          interval = \"10s\"\n          timeout  = \"2s\"\n        }\n\n        check {\n          name     = \"nodejs running on port 8080\"\n          type     = \"http\"\n          protocol = \"http\"\n          path     = \"/\"\n          interval = \"10s\"\n          timeout  = \"1s\"\n        }\n      }\n    }\n  }\n}\n\nEOF\n\necho \"Finished creating job files\"\n"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "nomad_servers",
                "nomad_server_template"
            ],
            "outputs": {
                "user_data": {
                    "sensitive": false,
                    "type": "string",
                    "value": "/Users/Mike/code/hashistack-spark/terraform/_env/gce/.terraform/modules/51911b635ab187390b374689dddd55f5/nomad_server.sh.tpl"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "utility",
                "mount_ssd_template"
            ],
            "outputs": {
                "script": {
                    "sensitive": false,
                    "type": "string",
                    "value": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT mount_ssd.sh: $1\"\n  echo \"$DT mount_ssd.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nlogger \"Mount local SSD\"\nsudo mkdir -p /mnt/ssd0\nsudo mkfs.ext4 -F /dev/disk/by-id/google-local-ssd-0\nsudo mount -o discard,defaults /dev/disk/by-id/google-local-ssd-0 /mnt/ssd0\nsudo chmod a+w /mnt/ssd0\n\nlogger \"Optimize local SSD\"\necho deadline | sudo tee -a /sys/block/sdb/queue/scheduler\necho 1 | sudo tee -a /sys/block/sdb/queue/iosched/fifo_batch\necho \"tmpfs /tmp tmpfs defaults,noatime,mode=1777 0 0\" | sudo tee -a /etc/fstab\n\nif [ ! -f /home/ubuntu/c1m/reboot ]; then\n  logger \"Local SSD reboot\"\n  echo $(date '+%s') | sudo tee -a /home/ubuntu/c1m/reboot \u003e /dev/null\n  sudo reboot\n  exit 0\nfi\n\nlogger \"Done\"\n\nexit 0\n"
                }
            },
            "resources": {
                "template_file.mount_ssd": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "89dd7fe479675f6894a2c9e4359fcdeb93d7d9f165eee525b1f7363080ed8bfe",
                        "attributes": {
                            "id": "89dd7fe479675f6894a2c9e4359fcdeb93d7d9f165eee525b1f7363080ed8bfe",
                            "rendered": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT mount_ssd.sh: $1\"\n  echo \"$DT mount_ssd.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nlogger \"Mount local SSD\"\nsudo mkdir -p /mnt/ssd0\nsudo mkfs.ext4 -F /dev/disk/by-id/google-local-ssd-0\nsudo mount -o discard,defaults /dev/disk/by-id/google-local-ssd-0 /mnt/ssd0\nsudo chmod a+w /mnt/ssd0\n\nlogger \"Optimize local SSD\"\necho deadline | sudo tee -a /sys/block/sdb/queue/scheduler\necho 1 | sudo tee -a /sys/block/sdb/queue/iosched/fifo_batch\necho \"tmpfs /tmp tmpfs defaults,noatime,mode=1777 0 0\" | sudo tee -a /etc/fstab\n\nif [ ! -f /home/ubuntu/c1m/reboot ]; then\n  logger \"Local SSD reboot\"\n  echo $(date '+%s') | sudo tee -a /home/ubuntu/c1m/reboot \u003e /dev/null\n  sudo reboot\n  exit 0\nfi\n\nlogger \"Done\"\n\nexit 0\n",
                            "template": "#!/bin/bash\nset -e\n\nlogger() {\n  DT=$(date '+%Y/%m/%d %H:%M:%S')\n  echo \"$DT mount_ssd.sh: $1\"\n  echo \"$DT mount_ssd.sh: $1\" | sudo tee -a /var/log/user_data.log \u003e /dev/null\n}\n\nlogger \"Begin script\"\n\nlogger \"Mount local SSD\"\nsudo mkdir -p ${mount_dir}\nsudo mkfs.ext4 -F /dev/disk/by-id/${local_ssd_name}\nsudo mount -o discard,defaults /dev/disk/by-id/${local_ssd_name} ${mount_dir}\nsudo chmod a+w ${mount_dir}\n\nlogger \"Optimize local SSD\"\necho deadline | sudo tee -a /sys/block/sdb/queue/scheduler\necho 1 | sudo tee -a /sys/block/sdb/queue/iosched/fifo_batch\necho \"tmpfs /tmp tmpfs defaults,noatime,mode=1777 0 0\" | sudo tee -a /etc/fstab\n\nif [ ! -f /home/ubuntu/c1m/reboot ]; then\n  logger \"Local SSD reboot\"\n  echo $(date '+%s') | sudo tee -a /home/ubuntu/c1m/reboot \u003e /dev/null\n  sudo reboot\n  exit 0\nfi\n\nlogger \"Done\"\n\nexit 0\n",
                            "vars.%": "2",
                            "vars.local_ssd_name": "google-local-ssd-0",
                            "vars.mount_dir": "/mnt/ssd0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "utility",
                "utility_template"
            ],
            "outputs": {
                "user_data": {
                    "sensitive": false,
                    "type": "string",
                    "value": "/Users/Mike/code/hashistack-spark/terraform/_env/gce/.terraform/modules/26533dc3ab52a062473993ccdb926576/utility.sh.tpl"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "nomad_servers",
                "nomad_jobs",
                "classlogger_1"
            ],
            "outputs": {
                "consul_docker_job": {
                    "sensitive": false,
                    "type": "string",
                    "value": "job \"classlogger-consul-docker\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n}\n"
                },
                "consul_raw_exec_job": {
                    "sensitive": false,
                    "type": "string",
                    "value": "job \"classlogger-consul-raw-exec\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n}\n"
                },
                "docker_job": {
                    "sensitive": false,
                    "type": "string",
                    "value": "job \"classlogger-docker\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n}\n"
                },
                "raw_exec_job": {
                    "sensitive": false,
                    "type": "string",
                    "value": "job \"classlogger-raw-exec\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n}\n"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "nomad_servers",
                "nomad_jobs",
                "classlogger_20"
            ],
            "outputs": {
                "consul_docker_job": {
                    "sensitive": false,
                    "type": "string",
                    "value": "job \"classlogger-consul-docker\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n}\n"
                },
                "consul_raw_exec_job": {
                    "sensitive": false,
                    "type": "string",
                    "value": "job \"classlogger-consul-raw-exec\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n}\n"
                },
                "docker_job": {
                    "sensitive": false,
                    "type": "string",
                    "value": "job \"classlogger-docker\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n}\n"
                },
                "raw_exec_job": {
                    "sensitive": false,
                    "type": "string",
                    "value": "job \"classlogger-raw-exec\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 20\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n}\n"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "nomad_servers",
                "nomad_jobs",
                "classlogger_200"
            ],
            "outputs": {
                "consul_docker_job": {
                    "sensitive": false,
                    "type": "string",
                    "value": "job \"classlogger-consul-docker\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n}\n"
                },
                "consul_raw_exec_job": {
                    "sensitive": false,
                    "type": "string",
                    "value": "job \"classlogger-consul-raw-exec\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n}\n"
                },
                "docker_job": {
                    "sensitive": false,
                    "type": "string",
                    "value": "job \"classlogger-docker\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n}\n"
                },
                "raw_exec_job": {
                    "sensitive": false,
                    "type": "string",
                    "value": "job \"classlogger-raw-exec\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 200\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n}\n"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "nomad_servers",
                "nomad_jobs",
                "classlogger_2000"
            ],
            "outputs": {
                "consul_docker_job": {
                    "sensitive": false,
                    "type": "string",
                    "value": "job \"classlogger-consul-docker\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n}\n"
                },
                "consul_raw_exec_job": {
                    "sensitive": false,
                    "type": "string",
                    "value": "job \"classlogger-consul-raw-exec\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"\\${JOB}-\\${TASKGROUP}-classlogger\"\n      }\n    }\n  }\n}\n"
                },
                "docker_job": {
                    "sensitive": false,
                    "type": "string",
                    "value": "job \"classlogger-docker\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashicorp/nomad-c1m:0.1\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n}\n"
                },
                "raw_exec_job": {
                    "sensitive": false,
                    "type": "string",
                    "value": "job \"classlogger-raw-exec\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  group \"classlogger-1\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-1\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-2\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_2\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-2\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-3\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_3\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-3\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-4\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_4\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-4\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n\n  group \"classlogger-5\" {\n    count = 2000\n\n    constraint {\n      attribute = \"\\${node.class}\"\n      value     = \"class_5\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"classlogger-5\" {\n      driver = \"raw_exec\"\n\n      config {\n        command = \"classlogger\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.service.consul:6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n    }\n  }\n}\n"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "nomad_servers",
                "nomad_jobs",
                "redis"
            ],
            "outputs": {
                "job": {
                    "sensitive": false,
                    "type": "string",
                    "value": "job \"redis\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  update {\n    stagger      = \"10s\"\n    max_parallel = 1\n  }\n\n  group \"redis\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.datacenter}\"\n      value     = \"gce-us-central1\"\n    }\n\n    restart {\n      mode     = \"delay\"\n      interval = \"5m\"\n      attempts = 10\n      delay    = \"25s\"\n    }\n\n    task \"redis\" {\n      driver = \"docker\"\n\n      config {\n        image = \"hashidemo/redis:latest\"\n\n        port_map {\n          db = 6379\n        }\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n\n        network {\n          mbits = 1\n\n          port \"db\" {\n            static = 6379\n          }\n        }\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      service {\n        name = \"redis\"\n        tags = [\"global\", \"gce-us-central1\"]\n        port = \"db\"\n\n        check {\n          name     = \"redis alive\"\n          type     = \"tcp\"\n          interval = \"10s\"\n          timeout  = \"2s\"\n        }\n      }\n    }\n  }\n}\n"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "us_central1",
                "compute",
                "nomad_servers",
                "nomad_jobs",
                "web"
            ],
            "outputs": {
                "job": {
                    "sensitive": false,
                    "type": "string",
                    "value": "job \"web\" {\n  region      = \"gce-us-central1\"\n  datacenters = [\"gce-us-central1\"]\n  type        = \"service\"\n  priority    = 50\n\n  update {\n    stagger      = \"10s\"\n    max_parallel = 1\n  }\n\n  group \"nginx\" {\n    count = 1\n\n    constraint {\n      attribute = \"\\${node.datacenter}\"\n      value     = \"gce-us-central1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"nginx\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashidemo/nginx:latest\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n\n        network {\n          mbits = 1\n\n          port \"http\" {\n            static = 80\n          }\n        }\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      service {\n        name = \"nginx\"\n        tags = [\"global\", \"gce-us-central1\"]\n        port = \"http\"\n\n        check {\n          name     = \"nginx alive\"\n          type     = \"tcp\"\n          interval = \"10s\"\n          timeout  = \"2s\"\n        }\n      }\n    }\n  }\n\n  group \"nodejs\" {\n    count = hashidemo/nodejs:latest\n\n    constraint {\n      attribute = \"\\${node.datacenter}\"\n      value     = \"gce-us-central1\"\n    }\n\n    restart {\n      mode     = \"fail\"\n      attempts = 3\n      interval = \"5m\"\n      delay    = \"2s\"\n    }\n\n    task \"nodejs\" {\n      driver = \"docker\"\n\n      config {\n        image        = \"hashidemo/nodejs-dc-failover:latest\"\n        image        = \"hashidemo/nodejs:latest\"\n        network_mode = \"host\"\n      }\n\n      resources {\n        cpu    = 20\n        memory = 15\n        disk   = 10\n\n        network {\n          mbits = 1\n\n          # Request for a dynamic port\n          port \"http\" {\n          }\n        }\n      }\n\n      logs {\n        max_files     = 1\n        max_file_size = 5\n      }\n\n      env {\n        REDIS_ADDR = \"redis.query.consul\"\n        REDIS_PORT = \"6379\"\n        NODE_CLASS = \"\\${node.class}\"\n      }\n\n      service {\n        name = \"nodejs\"\n        tags = [\"global\", \"gce-us-central1\"]\n        port = \"http\"\n\n        check {\n          name     = \"nodejs alive\"\n          type     = \"tcp\"\n          interval = \"10s\"\n          timeout  = \"2s\"\n        }\n\n        check {\n          name     = \"nodejs running on port 8080\"\n          type     = \"http\"\n          protocol = \"http\"\n          path     = \"/\"\n          interval = \"10s\"\n          timeout  = \"1s\"\n        }\n      }\n    }\n  }\n}\n"
                }
            },
            "resources": {},
            "depends_on": []
        }
    ]
}
